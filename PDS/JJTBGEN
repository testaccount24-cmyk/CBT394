         TITLE 'CREATE TABLE FOR PROCESSING BY "HALVE" SUBROUTINE'
* LOAD MODULE FORMAT TABLE CREATION ROUTINE
*
* SPECIFICATIONS:
*
* MODULE NAME: JJTBGEN
*
* ATTRIBUTES : NONE
*
* PRIVATE MACROS : "SUBENT" - ENTRY INTO INTERNAL SUBROUTINE
*                  "SUBRET" - EXIT FROM AN INTERNAL SUBROUTINE
*
* FUNCTION = SEE BELOW
*
*    THIS ROUTINE CREATES A TABLE WHICH CAN BE PROCESSED BY "HALVE"
* BINARY SEARCH SUBROUTINE.
*
*  INPUT TO THE ROUTINE:
*
*    . SYSIN    - CONTROL DATA SET (CONTROL STMTS DEFINING THE TABLE)
*    . TBLIN    - SEQUENTIAL FILE FROM WHICH TABLE WILL BE CREATED. ONE
*                 RECORD WILL BE CONVERTED TO ONE TABLE ELEMENT. TABLE
*                 ELEMENTS ARE IN THE SAME SEQUENCE AS RECORDS IN
*                 IN TBLIN.
*
*  OUTPUT:
*
*    . SYSUT1   - OUTPUT FILE. CONTAINS 80 BYTES RECORDS WITH AN
*                 ASSEMBLER CSECT AND CONSTANTS CONTAINING DESCRIPTION
*                 OF THE TABLE AND TABLE ELEMENTS. IT HAS TO BE THEN
*                 COMPILED AND LINKEDITED.
*    . SYSPRINT - MESSAGE DATA SET
*
* COMPILED AND LINKEDITED TABLE CAN BE LOADED INTO STORAGE USING
* "LOAD" MACRO OR ANY HIGH LEVEL LANGUAGE EQUIVALENT AND THEN ACCESSED
* USING "HALVE" TABLE BINARY SEARCH SUBROUTINE.
*
*
* SYSIN CONTROL STATEMENTS:
*
*  SYNTAX: CAN BE SPECIFIED IN COLOMNS 1 TO 72. NO CONTINUATION IS
*  ALLOWED. CONTROL STMT CONSISTS OF A KEYWORD SEPARATED BY ONE OR
*  MORE BLANKS FROM AN OPERAND. THE FOLLOWING CONTROL STMTS CAN BE
*  SPECIFIED:
*
*  ."NAME" - OPTIONAL, SPECIFIES NAME OF THE TABLE CSECT.
*
*  ."EXTRACT" - OPTIONAL, SPECIFIES DATA TO BE EXTRACTED FROM ONE INPUT
*    RECORD TO CREATE ONE TABLE ELEMENT. OPERAND CONSISTS OF PAIRS OF
*    NUMBERS BEING RESPECTIVELY POSITION AND LENGTH OF DATA TO BE
*    EXTRACTED. MORE THEN ON "EXTRACT" STMT CAN BE SPECIFIED. TABLE
*    ELEMENT IS ASSEMBLED FROM DATA SPECIFIED IN ALL "EXTRACT" STMTS
*    IN THE SAME SEQUENCE AS SPECIFIED IN SYSIN. IF NO "EXTRACT" IS
*    SPECIFIED - ONE TBLIN RECORD IS CONVERTED INTO ONE TABLE ELEMENT.
*    IF TBLIN CONTAINS "V" OR "U" FORMAT RECORDS - "EXTRACT" HAS TO BE
*    SPECIFIED BECAUSE TABLE ELEMENTS HAVE TO BE OF EQUAL LENGTH.
*
*  ."KEYLEN" - LENGTH OF THE KEY OF THE TABLE ELEMENT. IT CAN BE
*    SPECIFIED IF KEY IS LOCATED IN THE FRONT OF THE TABLE ELEMENT AND
*    TABLE IS SORTED IN CHARACTER ASCENDING SEQUENCE. IF SPECIFIED,
*    JJTBGEN  CHECKS IF INPUT FILE IS CORRECTLY SORTED. "KEYLEN" IS
*    MUTUALLY EXCLUSIVE WITH "COMPARE" STMT. EITHER "KEYLEN" OR
*    "COMPARE" HAS TO BE SPECIFIED. LENGTH OF THE KEY HAS TO BE:
*    1 <= "KEYLEN" <= 256.
*
*  ."COMPARE" - ENTRY POINT NAME OF COMPARE EXIT ROUTINE TO BE USED BY
*    "HALVE" SUBROUTINE. IF TABLE'S KEY DOES NOT SATISFY CONDITIONS
*    AS STATED IN "KEYLEN" DISCUSSION ABOVE - USER HAS TO PROVIDE HIS
*    OWN EXIT TO BE USED BY "HALVE". EXIT ROUTINE HAS TO BE WRITTEN IN
*    ASSEMBLER AND LINKEDITED WITH THE TABLE AS ONE LOAD MODULE. SUCH
*    EXIT MAKES POSSIBLE CREATION OF TABLES WITH VARIABLE LENGTH
*    ELEMENTS WHICH CAN BE ACCESSED USING BINARY SEARCH TECHNIQUE.
*    BINARY SEARCH LOCATES MID ELEMENT OF A TABLE (OR CURRENT TABLE
*    SEGMENT) AND COMPARES ITS KEY WITH INPUT KEY PROVIDED IN THE CALL
*    OF "HALVE". IF THEY ARE EQUAL - SEARCH IS TERMINATED. IF INPUT KEY
*    IS LOWER  THAN MID ELEMENT'S KEY, PROCEEDS TO SEARCH FIRST PART
*    OF THE TABLE AS DELIMITED BY THE MID ELEMENT. OTHERWISE SEARCH
*    CONTINUES WITHIN SECOND PART OF THE TABLE. "HIGHER", "EQUAL",
*    "LOWER" TERMS REFLECT RELATIVE ORDER OF KEYS IN THE TABLE. THEIR
*    RELATIVE LOCATION WITHIN THE TABLE. INTERFACE TO THE COMPARE EXIT
*    IS THE FOLLOWING (ON INPUT):
*      R13 - SAVE AREA ADDRESS
*      R14 - RETURN ADDRESS
*      R15 - ENTRY POINT ADDRESS
*      R5  - INPUT KEY ADDRESS (KEY PRESENTED TO "HALVE")
*      R11 - TABLE MID ELEMENT ADDRESS
*    ON OUTPUT R15 HAS TO CONTAIN ONE OF THE RETURN CODES:
*      0  IF KEYS ARE EQUAL
*      4  IF INPUT KEY IS HIGHER THAN MID ELEMENT'S KEY
*      8  IF INPUT KEY IS LOWER  THAN MID ELEMENT'S KEY
*    CONTENTS OF ANY OTHER REGISTER THAN R15 CAN NOT BE MODIFIED BY THE
*    EXIT.
*
* FORMAT OF SYSIN CONTROL STATEMENTS:
*
*    NAME name         - NAME OF THE TABLE CSECT
*    KEYLEN value      - LENGTH OF THE KEY
*    COMPARE name      - ENTRY POINT NAME OF COMPARE EXIT
*    EXTRACT (p1,l1),(p2,p2),(p3,l3),.....
*                      - pn, ln  ARE POSITION OF DATA IN THE TBLIN
*                        RECORD AND LENGTH OF DATA RESPECTIVELY.
*                        IF THERE IS NO ENOUGH OF ROOM ON THE SYSIN
*                        RECORD TO SPECIFY ALL DATA TO BE INCLUDED IN
*                        A TABLE ELEMENT - ANOTHER EXTRACT STMT SHOULD
*                        BE SPECIFIED IN THE NEXT SYSIN RECORD.
*
* CONTROL STMTS CAN BE SPECIFIED IN ANY SEQUENCE IN THE SYSIN.
*
* SAMPLE JCL TO RUN THE PROGRAM :
*
* //TBGEN   EXEC PGM=JJTBGEN
* //STEPLIB   DD DSN=SYS1.UTIL.LINKLIB,DISP=SHR
* //TBLIN     DD DSN=OGL.TABLE(TBLXYZ),DISP=SHR
* //TBOUT     DD UNIT=VIO,DSN=&&TABLE,SPACE=(4080,(10,10)),
* //             DISP=(,PASS),DCB=BLKSIZE=4080
* //SYSPRINT  DD SYSOUT=*
* //SYSIN     DD *
* NAME TBLXYZ
* EXTRACT (1,50),(60,20)
* KEYLEN 12
* /*
* //        EXEC ASMFCL
* //ASM.SYSIN DD DSN=&&TABLE,DISP=(OLD,DELETE)
* //LKED.SYSLMOD DD DSN=SYS2.TBLINK(TBLXYZ),DISP=SHR
*
* END OF THE SAMPLE JCL
*
* WRITTEN BY: JOHN JAKUBEK, OGL
*                MARCH     1986
*
* CHANGE ACTIVITY:
*        NONE
*
         SPACE
         MACRO
&LAB     SUBENT
.* "SUBENT" MACRO IS USED AT ENTRY TO AN INTERNAL SUBROUTINE
.* LINK REGISTER HAS TO BE ALWAYS R14.
.* IT SHOULD BE USED WHENEVER R14 IS CHANGED BY SUBROUTINE.
.*
.* EXAMPLE:
.*          ...
.*          BAL   R14,SUBRNAME
.*          ...
.* SUBRNAME SUBENT
.*          ...             SUBROUTINE'S CODE
.*          SUBRET SUBRNAME
.*
&LAB     DS    0F
         B     *+16               AROUND EYE CATCHER AND R14 SAVE
         DC    CL8'&LAB'          EYE CATCHER
         DC    F'0'               R14 SAVE
         ST    R14,*-4            STORE R14
         MEND
         MACRO
&LAB1    SUBRET &LAB
.* "SUBRET" MACRO IS USED AT EXIT FROM AN INTERNAL SUBROUTINE.
.* IT IS INTENDED TO BE USED JOINTLY WITH "SUBENT" MACRO
&LAB1    L     R14,&LAB+12              RESTORE R14
         BR    R14                      RETURN
         MEND
         SPACE
OFDTBGN1 CSECT                   CSECT NAME
         DC    C'JJTBGEN  ',AL1(8) DUMP EYE CATCHER
         TSTAMP
         PRINT NOGEN
JJTBGEN  SAVE  (14,12)            SAVE REGISTERS
         USING JJTBGEN ,R15
         ENTRY JJTBGEN            ENTRY POINT
         SPACE
* REGISTERS EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
* R0,R1,R2,R3,R14,R15 - WORK REGISTERS
         SPACE
*   BITS EQUATES
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         SPACE
*--------I N I T I A L I Z A T I O N----------------------------------*
         SPACE
         DROP  R15
         BALR  R12,0              SETUP PROGRAM ADDRESSABILITY
         USING *,R12,R11
         LA    R11,2048(,R12)     SECOND BASE REGISTER
         LA    R11,2048(,R11)
         L     R0,DSAS            DSA SIZE
         GETMAIN R,LV=(0)         GET STORAGE FOR DSA
         USING DSA,R1
         ST    R13,SA+4           CHAIN
         ST    R1,8(R13)          SAVE AREAS
         LR    R13,R1             CURRENT SAVE AREA
         DROP  R1
         USING DSA,R13            DSA ADDRESSABILITY
         SPACE
         BAL   R14,INIT           INITIALIZATION
         SPACE
*--------M A I N L I N E----------------------------------------------*
         SPACE
*  OPEN MESSAGE FILE ( PRINT )
         SPACE
         OPEN  (PRINT,(OUTPUT))
         TM    PRINT+48,DCBOFOPN  OPEN SUCCESSFUL        .............?
         BNO   PRTOPNER           NO, OPEN ERROR         ------------->
         BAL   R14,TBLINOP        OPEN TBLIN FILE
         LTR   R15,R15            TABLE INPUT FILE O.K................?
         BNZ   EOPERR             NO, TERMINATE WITH ERROR MSG-------->
         SPACE
*  OPEN SYSIN FILE ( TABLE DEFINITION )
         OPEN  (SYSIN,(INPUT))
         TM    SYSIN+48,DCBOFOPN  OPEN SUCCESSFUL        .............?
         BNO   SINOPNER           NO, OPEN ERROR         ------------->
         BAL   R14,TBLDEFP        PROCESS DEFINITION OF THE TABLE
         LTR   R15,R15            DEFINITION OF THE TABLE O.K.........?
         BNZ   EOPERR             NO, TERMINATE WITH ERROR MSG-------->
         SPACE
*  OPEN OUTPUT FILE ( 80 BYTES RECORDS, TABLE CSECT )
         SPACE
         OPEN  (TBLOUT,(OUTPUT))
         TM    TBLOUT+48,DCBOFOPN OPEN SUCCESSFUL        .............?
         BNO   OUTOPNER           NO, OPEN ERROR         ------------->
         BAL   R14,TBLHDRP        WRITE OUT TABLE HEADER(CSECT+TDEF)
         SPACE
*  READ TBLIN AND WRITE OUT TABLE ELEMENTS
         SPACE
         BAL   R14,TBLPROC
         LTR   R15,R15            NO PROBLEMS WITH TABLE CREATION.....?
         BNZ   EOPERR             ERROR, TERMINATION WITH MSG--------->
         BAL   R14,TBLEND         WRITE TABLE END LABEL AND STMT
         B     EOP                NORMAL END OF PROCESSING
         SPACE
*--------T E R M I N A T I O N----------------------------------------*
         SPACE
EOP      BAL   R14,EOPMSG         END OF PROCESSING MESSAGE
         BAL   R14,CLOSE          CLOSE THE FILES
         SPACE
RET0     XR    R15,R15            RC=0
RET      L     R0,DSAS            DSASIZE
         LR    R1,R13             DSA ADDRESS
         L     R13,SA+4           PREVIOUS SAVE AREA ADDRESS
         LR    R2,R15           SAVE RETURN CODE (FREEMAIN CHANGES R15)
         FREEMAIN R,LV=(0),A=(1)  FREEMAIN DSA
         LR    R15,R2             RESTORE RETURN CODE
         RETURN (14,12),RC=(15)
         SPACE
EOPERR   BAL   R14,EOPERM         TERMINATION WITH ERROR MESSAGE
         BAL   R14,CLOSE          CLOSE THE FILES
         B     RC16               RC = 16
         SPACE
RC16     LA    R15,16             RC FROM SAVE = 16
         B     RET                RETURN
         SPACE 2
SINOPNER DS    0H                 SYSIN OPEN ERROR
         MVC   MSGREC1(L'SINOPNEM),SINOPNEM
         BAL   R14,PRNTMSG        PRINT MESSAGE
         B     RC16               TERMINATE WITH RC=16
         SPACE 2
OUTOPNER DS    0H                 SYSUT1 OPEN ERROR
         MVC   MSGREC1(L'OUTOPNEM),OUTOPNEM
         BAL   R14,PRNTMSG        PRINT MESSAGE
         B     RC16               TERMINATE WITH RC=16
         SPACE 2
PRTOPNER DS    0H                 PRINT DCB OPEN ERROR
         MVC   PRTOPNEM+4(8),JOBNAME JOB NAME INTO MESSAGE TEXT
         WTO   MF=(E,PRTOPNEM)    WTO   ERROR MESSAGE
         B     RC16               RETURN CODE = 16
         SPACE
*--------S U B R O U T I N E S----------------------------------------*
         SPACE
*  OPEN TBLIN FILE ( TABLE CONTENTS INPUT )
TBLINOP  SUBENT
         OPEN  (TBLIN,(INPUT))
         TM    TBLIN+48,DCBOFOPN  OPEN SUCCESSFUL        .............?
         BNO   INOPNER            NO, OPEN ERROR         ------------->
*  CHECK IF VALID RECORD FORMAT
         TM    TBLIN+36,DCBRECU   UNDEFINED              .............?
         BO    OUTRFMU            YES, O.K.              ------------->
         TM    TBLIN+36,DCBRECF   FIXED LENGTH           .............?
         BO    OUTRFMF            YES, O.K.              ------------->
         TM    TBLIN+36,DCBRECV   VARIABLE               .............?
         BNO   INVRECFM           NO, INVALID RECORD FORMAT----------->
         TM    TBLIN+36,DCBRECSB  VARIABLE SPANNED RECORDS............?
         BNO   OUTRFMV            NO, CONTINUE------------------------>
         CLOSE (TBLIN)            YES, CLOSE TBLIN TO CHANGE BFTEK
         OI    TBLIN+32,DCBBFTA   BFTEK=A FOR SPANNED RECORDS
         OPEN  (TBLIN,(INPUT))    REOPEN THE FILE AFTER CHANGE OF BFTEK
OUTRFMV  OI    FLAGS,RECFMV       RECFM=V SPECIFIED FOR SYSUT1
         B     TBLINOP0           NORMAL RETURN----------------------->
OUTRFMF  OI    FLAGS,RECFMF       RECFM=F SPECIFIED FOR SYSUT1
         MVC   LRECL,TBLIN+82     RECORD LENGTH = LRECL
         B     TBLINOP0           NORMAL RETURN----------------------->
OUTRFMU  OI    FLAGS,RECFMU       RECFM=U SPECIFIED FOR SYSUT1
TBLINOP0 SR    R15,R15            NORMAL RETURN (RC=0)
TBLINOPR SUBRET TBLINOP
         SPACE
INVRECFM DS    0H                 TBLIN INVALID RECORD FORMAT
         MVC   MSGREC1(L'INVRFMM),INVRFMM
         BAL   R14,PRNTMSG        PRINT MESSAGE
TBLINOPE LA    R15,16             TERMINATE WITH RC=16
         B     TBLINOPR
         SPACE
INOPNER  DS    0H                 TBLIN  OPEN ERROR
         MVC   MSGREC1(L'INOPNEM),INOPNEM
         BAL   R14,PRNTMSG        PRINT MESSAGE
         B     TBLINOPE           TERMINATE WITH RC=16
         SPACE
*---------------------------------------------------------------------*
         SPACE
*  WRITE OUT TABLE HEADER (CSECT + TABLE DEFINITION FIELDS)
TBLHDRP  SUBENT
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
         MVC   R80(8),CSECTNM     CSECT NAME TO OUTPUT RECORD
         MVC   R80+9(5),=C'CSECT'
         PUT   TBLOUT,R80         WRITE RECORD WITH CSECT
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         MVC   R80(L'SAREC),SAREC SAVE AREA RECORD
         PUT   TBLOUT,R80         WRITE RECORD WITH SAVE AREA
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         MVC   R80(L'FEAREC),FEAREC FIRST ENTRY (TABLE) ADDRESS RECORD
         PUT   TBLOUT,R80         WRITE RECORD
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         LH    R0,TBLELEN         LENGTH OF THE TABLE ELEMENT
         CVD   R0,D               CONVERT TO DECIMAL
         UNPK  WRK15,D            UNPACK IT
         OI    WRK15+14,X'F0'     INSERT ZONE
         MVC   LEN,WRK15+10       MOVE ELEMENT LENGTH INTO DC LINE
         MVC   R80(LENRECE-LENREC),LENREC TABLE ELEMENT LENGTH RECORD
         PUT   TBLOUT,R80         WRITE RECORD
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         MVC   OFFS,LEN           OFFSET IS THE SAME AS ELEMENT LENGTH
         MVC   R80(OFFRECE-OFFREC),OFFREC TABLE ELEMENTS OFFSET RECORD
         PUT   TBLOUT,R80         WRITE RECORD
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
         MVC   R80(KLRECE-KLREC),KLREC TABLE KEY LENGTH OR COMPARE
*                                      EXIT ADDRESS
         PUT   TBLOUT,R80         WRITE RECORD
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         MVC   NMLEN,LEN          MOVE ELEMENT LENGTH INTO FORMULA
         MVC   R80(NMRECE-NMREC),NMREC MAX.NO.OF ELEMENTS IN THE TABLE
         PUT   TBLOUT,R80         WRITE RECORD
         PUT   TBLOUT,R80         MAX.NO. IS THE SAME AS CURRENT NO.
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         MVC   R80(L'EAEPREC),EAEPREC ELEMENT ADDRESS/POSITION
         PUT   TBLOUT,R80         WRITE TWO FULLWORD FIELDS
         PUT   TBLOUT,R80
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         MVC   R80(L'FIRSTE),FIRSTE FIRST ELEMENT LABEL
         PUT   TBLOUT,R80         WRITE RECORD
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
         SUBRET TBLHDRP           RETURN FROM SUBROUTINE
         SPACE
*---------------------------------------------------------------------*
         SPACE
*  TERMINATE TABLE PROCESSING (WRITE TBLEND LABEL AND CSECT END)
TBLEND   SUBENT
         MVC   R80(L'TBLENDL),TBLENDL END OF TABLE LABEL
         PUT   TBLOUT,R80         WRITE RECORD
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
*
         MVC   R80(L'CSEND),CSEND CSECT END
         PUT   TBLOUT,R80         WRITE RECORD
         BAL   R14,BLANKR80       BLANK OUTPUT RECORD
         SUBRET TBLEND            RETURN FROM SUBROUTINE
         SPACE
* TABLE DEFINITION FIELDS
SAREC    DC    C' DS 20A'         TBDEF SAVE AREA
FEAREC   DC    C' DC A(FIRSTE)'   TBDEF FIRST ENTRY ADDRESS
LENREC   DC    C' DC AL2('        TBDEF ELEMENT LENGTH
LEN      DS    CL5                TABLE ELEMENT LENGTH
         DC    C')'               CLOSING PARENTHESIS
LENRECE  EQU   *
OFFREC   DC    C' DC AL2('       TBDEF ELEMENTS OFFSET
OFFS     DS    CL5                TABLE ELEMENTS OFFSET
         DC    C')'               CLOSING PARENTHESIS
OFFRECE  EQU   *
KLREC    DC    C' DC '            LENGTH OF THE KEY OR COMPARE EXIT
KLORCOMP DC    C'A('              A IS REPLACED BY V FOR COMPARE EXIT
KL       DS    CL8                KEY LENGTH OR COMPARE NAME
         DC    C') '              CLOSING PARENTHESIS
KLRECE   EQU   *
NMREC    DC    C' DC '            MAX.NO OF ELEMENTS IN THE TABLE
         DC    C'A((TBLEND-FIRSTE)/'
NMLEN    DS    CL5                LENGTH OF ONE TABLE ELEMENT
         DC    C')'               CLOSING PARENTHESIS
NMRECE   EQU   *
EAEPREC  DC    C' DS A'           ELEMENT ADDRESS/POSITION FIELDS
FIRSTE   DC    C'FIRSTE EQU *'    FIRST ELEMENT LABEL
TBLENDL  DC    C'TBLEND EQU *'    END OF TABLE LABEL
CSEND    DC    C' END'            CSECT END STMT
         SPACE
* BLANK R80 FIELD (OUTPUT RECORD FIELD)
BLANKR80 MVI   R80,C' '
         MVC   R80+1(L'R80-1),R80
         BR    R14                RETURN
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*  PROCESS SYSIN INPUT (TABLE DEFINITION)                             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
KWADDR   EQU   R4                 ADDRESS OF A KEYWORD
KWLENR   EQU   R5                 LENGTH OF A KEYWORD
OPADDR   EQU   R6                 ADDRESS OF OPERAND FIELD
OPLEN    EQU   R7                 LENGTH OF OPERAND FIELD
         SPACE
TBLDEFP  SUBENT
         MVI   TBLDEFLG,X'00'     INITIALYZE FLAGS
         MVC   CSECTNM,=CL8'TBLDEF' DEFAULT CSECT NAME
         XC    NOEXTP,NOEXTP      NO.OF EXTRACT PAIRS = ZERO
         XC    SINRCNT,SINRCNT    SYSIN RECORD COUNT =  ZERO
         MVI   MSGREC1,X'40'      CLEAR MSGREC1
         MVC   MSGREC1+1(L'MSGREC1-1),MSGREC1
GETSYSIN GET   SYSIN,R80          READ SYSIN RECORD
         L     R1,SINRCNT         SYSIN RECORD COUNT
         LA    R1,1(,R1)          + 1
         ST    R1,SINRCNT         SAVE IT
         BAL   R14,EXTKWRD        EXTRACT A KEYWORD AND OPERAND
         BAL   R14,SRCHKWD        SEARCH FOR KEYWORDS
         B     KWDBT(R15)         KEYWORDS BRANCH TABLE
KWDBT    B     KWINVLD            INVALID KEYWORD
         B     KWNAME             "NAME" KEYWORD
         B     KWKEYLEN           "KEYLEN" KEYWORD
         B     KWCOMPAR           "COMPARE" KEYWORD
         B     KWEXTRAK           "EXTRACT" KEYWORD
         SPACE
KWINVLD  DS    0H                 INVALID STMT KEYWORD SPECIFIED
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         MVC   MSGREC1+1(L'INVSTMTM),INVSTMTM  MOVE MSG TEXT INTO LNE
         B     SYSINERR           PRINT ERROR MESSAGE     ------------>
         SPACE
* "NAME" STMT
KWNAME   DS    0H                 TABLE CSECT NAME SPECIFIED
         TM    TBLDEFLG,NAMESPEC  NAME ALREADY SPECIFIED..............?
         BO    DUPSTMT            DUPLICATE NAME STMT    ------------->
         LTR   OPLEN,OPLEN        IS THERE NAME SPECIFIED.............?
         BZ    NAMEMIS            NO, NAME MISSING       ------------->
         CH    OPLEN,=H'8'        NAME LENGTH <= 8       .............?
         BH    NAMELENE           NO, CSECT NAME TOO LONG------------->
         MVI   CSECTNM,C' '       BLANK CSECT NAME FIELD
         MVC   CSECTNM+1(L'CSECTNM-1),CSECTNM
         BCTR  OPLEN,0            LENGTH OF NAME -1
         EX    OPLEN,MVCSNME      MOVE CSECT NAME INTO FIELD---------->
         OI    TBLDEFLG,NAMESPEC  NAME ALREADY SPECIFIED FLAG
KWPROCEX BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         B     GETSYSIN           READ NEXT SYSIN RECORD-------------->
MVCSNME  MVC   CSECTNM(1),0(OPADDR) MOVE CSECT NAME
         SPACE
DUPSTMT  DS    0H                 DUPLICATE STMT ERROR MSG
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         MVC   MSGREC1+1(L'DUPSTMTM),DUPSTMTM MOVE MSG TEXT INTO LNE
SYSINERR OI    TBLDEFLG,SYSINERF  ERROR IN SYSIN FLAG
         BAL   R14,PRNTMSG        PRINT MESSAGE
         B     GETSYSIN           GET NEXT INPUT RECORD
         SPACE
OPERMIS  DS    0H                 MISSING OPERAND MESSAGE
NAMEMIS  DS    0H                 NAME MISSING IN "NAME" STMT
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         MVC   MSGREC1+1(L'OPERMISM),OPERMISM MOVE MSG TEXT INTO LNE
         B     SYSINERR           PRINT ERROR MESSAGE     ------------>
         SPACE
NAMELENE DS    0H                 CSECT NAME > 8 CHARACTERS
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         MVC   MSGREC1+1(L'NAMELENM),NAMELENM MOVE MSG TEXT INTO LNE
         B     SYSINERR           PRINT ERROR MESSAGE     ------------>
         SPACE
* PRINT SYSIN RECORD
PRINTSIR SUBENT
         MVC   MSGREC1+1(L'R80),R80 MOVE SYSIN RECORD INTO MSG LINE
         BAL   R14,PRNTMSG        PRINT SYSIN RECORD      ------------>
         SUBRET PRINTSIR          RETURN                  ------------>
         SPACE
* "COMPARE" STMT
KWCOMPAR DS    0H                 COMPARE EXIT NAME SPECIFIED
         TM    TBLDEFLG,KEYLSPEC  "KEYLEN" SPECIFIED PREVIOUSLY.......?
         BO    COMPKLEX           YES, KEYLEN AND COMPARE ARE EXCLUSIVE
         TM    TBLDEFLG,COMPSPEC  "COMPARE" ALREADY SPECIFIED.........?
         BO    DUPSTMT            DUPLICATE NAME STMT    ------------->
         LTR   OPLEN,OPLEN        IS THERE NAME SPECIFIED.............?
         BZ    NAMEMIS            NO, NAME MISSING       ------------->
         CH    OPLEN,=H'8'        NAME LENGTH <= 8       .............?
         BH    NAMELENE           NO, CSECT NAME TOO LONG------------->
         MVI   KLORCOMP,C'V'      INSERT EXTERNAL REFERENCE CONSTANT
         MVI   KL,C' '            BLANK EXIT NAME FIELD
         MVC   KL+1(L'KL-1),KL
         LA    R1,KL(OPLEN)       ADDRESS OF FIRST CHARACTER AFTER NAME
         BCTR  OPLEN,0            LENGTH OF NAME -1
         EX    OPLEN,MVCEXNME     MOVE EXIT  NAME INTO FIELD---------->
         MVC   0(2,R1),=C') '     INSERT ) AFTER EXIT NAME
         OI    TBLDEFLG,COMPSPEC  NAME ALREADY SPECIFIED FLAG
         B     KWPROCEX           PRINT SYSIN RECORD      ------------>
MVCEXNME MVC   KL(1),0(OPADDR)    MOVE EXIT  NAME
         SPACE
COMPKLEX DS    0H                 "KEYLEN" AND "COMPARE" ARE MUTUALLY
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         MVC   MSGREC1+1(L'COMPKLMX),COMPKLMX MOVE MSG TEXT INTO LNE
         B     SYSINERR           PRINT ERROR MESSAGE     ------------>
         SPACE
KWKEYLEN DS    0H                 KEYLEN SPECIFIED
         TM    TBLDEFLG,COMPSPEC  "COMPARE" SPECIFIED PREVIOUSLY......?
         BO    COMPKLEX           YES, KEYLEN AND COMPARE ARE EXCLUSIVE
         TM    TBLDEFLG,KEYLSPEC  "KEYLEN" ALREADY SPECIFIED..........?
         BO    DUPSTMT            DUPLICATE NAME STMT    ------------->
         LTR   OPLEN,OPLEN        OPERAND IS SPECIFIED................?
         BZ    OPERMIS            NO, OPERAND MISSING    ------------->
         CH    OPLEN,=H'15'       OPERAND LENGTH > 15    .............?
         BH    INVKEYL            YES, INVALID KEYLEN MESSAGE--------->
* CHECK IF NUMERICS SPECIFIED IN KEYLEN
         MVI   TRT,X'FF'          ONLY NUMERICS ARE VALID
         MVC   TRT+1(L'TRT-1),TRT
         MVC   TRT+C'0'(10),=10X'00' NUMERIC CHARACTERS
         BCTR  OPLEN,0            LENGTH OF OPERAND - 1
         EX    OPLEN,NUMOPER      NUMERIC ONLY SPECIFIED..............?
         BNZ   INVKEYL            NO, INVALID KEYLEN SPECIFIED-------->
         EX    OPLEN,NUMPACK      PACK THE KEYLEN
         CP    D,=P'256'          IS KEYLEN > 256.....................?
         BH    INVKEYL            YES, KEYLEN IS INVALID-------------->
         CVB   R0,D               CONVERT KEYLEN TO BINARY
         STH   R0,KEYLEN          SAVE IT
         UNPK  WRK15,D            UNPACK KEYLEN INTO 15 BYTES WRK FIELD
         OI    WRK15+14,X'F0'     INSETR ZONE INTO DECIMAL SIGN
         MVI   KLORCOMP,C'A'      INSERT ADDRESS CONSTAND CHARACTER
         MVC   KL,WRK15+7         MOVE KEYLEN INTO OUTPUT RECORD
         MVC   KL+8(2),=C') '     INSERT ) AFTER KEYLEN NUMERIC
         OI    TBLDEFLG,KEYLSPEC  KEYLEN ALREADY SPECIFIED FLAG
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         B     GETSYSIN           READ NEXT SYSIN RECORD-------------->
NUMOPER  TRT   0(1,OPADDR),TRT    CHECK FOR NUMERICS IN OPERAND
NUMPACK  PACK  D,0(1,OPADDR)      PACK THE KEYLEN OPERAND
         SPACE
INVKEYL  DS    0H                 INVALID KEYLEN SPECIFIED MESSAGE
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         MVC   MSGREC1+1(L'INVKEYLM),INVKEYLM MOVE MSG TEXT INTO LNE
         B     SYSINERR           PRINT ERROR MESSAGE     ------------>
         SPACE
* "EXTRACT" STMT
KWEXTRAK DS    0H                 EXTRACT STMT PROCESSING
         LTR   OPLEN,OPLEN        IS OPERAND SPECIFIED................?
         BZ    OPERMIS            NO, OPERAND MISSING    ------------->
KWEXTLP  CLI   0(OPADDR),C'('     LEFT PARENTHESIS....................?
         BNE   EXOSYNER           EXTRACT OPERAND SYNTAX ERROR-------->
         LA    OPADDR,1(,OPADDR)  NEXT CHARACTER ADDRESS
         SH    OPLEN,=H'1'        NUMBER OF LEFT CHARACTERS
         BNP   EXOSYNER           INCOMPLETE OPERAND------------------>
* PROCESSING OF EXTRACT POSITION VALUE
         MVI   TRT,X'FF'          ONLY NUMERICS ARE VALID
         MVC   TRT+1(L'TRT-1),TRT
         MVC   TRT+C'0'(10),=10X'00' NUMERIC CHARACTERS
         LR    R1,OPLEN           OPERAND LENGTH INTO R1
         BCTR  R1,0               LENGTH OF OPERAND - 1
         EX    R1,TRTNUME         SEARCH FOR NONNUMERIC
         BC    8,EXOSYNER         NUMERICS UNTIL THE END OF OPERAND--->
         BC    2,EXOSYNER         NONNUMERIC FOUND AT OPERAND END----->
         CLI   0(R1),C','         IS FOUND DELIMITER A COMMA..........?
         BNE   EXOSYNER           NO, INVALID DELIMITER--------------->
         LA    R1,0(,R1)          CLEAR H/O BYTE
         LR    R15,R1             SAVE COMMA ADDRESS IN R15
         SR    R1,OPADDR          LENGTH OF POSITION VALUE
         BNP   EXOSYNER           COMMA RIGHT AFTER PARENTHESIS------->
*                                 POSITION VALUE NOT SPECIFIED
         CH    R1,=H'15'          POSITION HAVE MORE THAN 15 DIGITS...?
         BH    EXOSYNER           YES, ERROR-------------------------->
         SR    OPLEN,R1           OPERAND LENGTH AFTER POSITION VALUE
         BAL   R14,CONVEXB        CONVERT EXTRACT VALUE TO BINARY
         CH    R1,TBLIN+82        IS POSITION WITHIN LOGICAL RECORD...?
         BH    EXFRNGE            NO, EXTRACT FIELD RANGE ERROR------->
         TM    FLAGS,RECFMV       TBLIN HAS VARIABLE RECORDS..........?
         BNO   KWEXTLP1           NO, CONTINUE------------------------>
         CH    R1,=H'5'           IS POSITION OUTSIDE OF RDW..........?
         BL    EXFRNGE            NO, RDW SHOULD NOT BE EXTRACTED----->
KWEXTLP1 LH    R14,NOEXTP         NO.OF EXTRACT PAIRS IN THE TABLE
         CH    R14,MAXEXTP        IS EXTRACT TABLE ALREADY FULL.......?
         BNL   EXTBLMAX           YES, FULL , PRINT ERROR MESSAGE----->
         SLL   R14,2              * 4 = OFFSET OF NEXT AVAILABLE ENTRY
         STH   R1,EXTBL(R14)      STORE POSITION IN EXTRACT PAIRS TABLE
* PROCESSING OF EXTRACT FIELD LENGTH VALUE
         LA    OPADDR,1(,R15)     ADDRESS OF CHARACTER AFTER COMMA
         SH    OPLEN,=H'1'        LENGTH OF OPERAND AFTER COMMA
         BNP   EXOSYNER           ERROR, NOTHING AFTER COMMA---------->
         LR    R1,OPLEN           OPERAND LENGTH INTO R1
         BCTR  R1,0               LENGTH OF OPERAND - 1
         EX    R1,TRTNUME         SEARCH FOR NONNUMERIC
         BC    8,EXOSYNER         NUMERICS UNTIL THE END OF OPERAND--->
         CLI   0(R1),C')'         CLOSING PATENTHESIS.................?
         BNE   EXOSYNER           NO, INVALID DELIMITER--------------->
         LA    R1,0(,R1)          CLEAR H/O BYTE
         LR    R15,R1             SAVE ) ADDRESS IN R15
         SR    R1,OPADDR          LENGTH OF FIELD LENGTH VALUE
         BNP   EXOSYNER           ) IS  RIGHT AFTER THE COMMA--------->
*                                 POSITION VALUE NOT SPECIFIED
         CH    R1,=H'15'          LENGTH HAS MORE THAN 15 DIGITS......?
         BH    EXOSYNER           YES, ERROR-------------------------->
         SR    OPLEN,R1           OPERAND LENGTH AFTER LENGTH VALUE
         BAL   R14,CONVEXB        CONVERT EXTRACT VALUE TO BINARY
         LH    R14,NOEXTP         NO.OF EXTRACT PAIRS IN THE TABLE
         SLL   R14,2              * 4 = OFFSET OF NEXT AVAILABLE ENTRY
         LH    R0,EXTBL(R14)      LOAD POSITION VALUE
         BCTR  R0,0               POSITION - 1
         AR    R0,R1              + FIELD LENGTH
         CH    R0,TBLIN+82        IS FIELD WITHIN LOGICAL RECORD......?
         BH    EXFRNGE            NO, EXTRQCT FIELD RANGE ERROR------->
         STH   R1,EXTBL+2(R14)    STORE LENGTH OF EXTRACT FLD IN TBL
         AH    R1,TBLELEN         TOTAL LENGTH OF A TABLE ELEMENT
         STH   R1,TBLELEN         UPDATE
         LH    R14,NOEXTP         NUMBER OF EXTRACT PAIRS
         LA    R14,1(,R14)        + 1
         STH   R14,NOEXTP         UPDATE NO.OF EXTRACT PAIRS PROCESSED
         SPACE
* CHECK IF NEXT EXTRACT FIELD IS SPECIFIED
         LA    OPADDR,1(,R15)     ADDRESS OF CHARACTER AFTER )
         SH    OPLEN,=H'1'        LENGTH OF OPERAND AFTER )
         BNP   KWPROCEX           END OF EXTRACT STMT OPERAND--------->
         CLI   0(OPADDR),C','     IS COMMA SPEC AFTER ) ..............?
         BNE   EXOSYNER           NO, SYNTAX ERROR ------------------->
         LA    OPADDR,1(,OPADDR)  ADDRESS OF CHARACTER AFTER COMMA
         SH    OPLEN,=H'1'        LENGTH OF OPERAND AFTER COMMA
         BNP   EXOSYNER           CONTINUATION INDICATED, NOT SPEC---->
         B     KWEXTLP            CHECK IF LEFT PARENTHESIS----------->
         SPACE
TRTNUME  TRT   0(1,OPADDR),TRT
         SPACE
EXOSYNER DS    0H                 EXTRACT OPERAND SYNTAX ERROR
         BAL   R14,PRNTSIRU       PRINT SYSIN RECORD AND UNDERLINE---->
         MVC   MSGREC1+1(L'SYNTERM),SYNTERM  MOVE MSG TEXT INTO LNE
         B     SYSINERR
         SPACE
POSLEN0  DS    0H                 POSITION/LENGTH = 0 SPECIFIED
         BAL   R14,PRNTSIRU       PRINT SYSIN RECORD AND UNDERLINE---->
         MVC   MSGREC1+1(L'POSLEN0M),POSLEN0M  MOVE MSG TEXT INTO LNE
         B     SYSINERR
         SPACE
EXFRNGE  DS    0H                 EXTRACT FIELD RANGE ERROR
         BAL   R14,PRNTSIRU       PRINT SYSIN RECORD AND UNDERLINE---->
         MVC   MSGREC1+1(L'EXFRNGEM),EXFRNGEM  MOVE MSG TEXT INTO LNE
         B     SYSINERR
         SPACE
EXTBLMAX DS    0H                 EXTRACT FIELDS TABLE IS FULL
         BAL   R14,PRNTSIRU       PRINT SYSIN RECORD AND UNDERLINE---->
         MVC   MSGREC1+1(L'EXTBLFM),EXTBLFM  MOVE MSG TEXT INTO LNE
         B     SYSINERR
         SPACE
* PRINT SYSIN RECORD AND UNDERLINE ASTERISKS
PRNTSIRU SUBENT
         BAL   R14,PRINTSIR       PRINT SYSIN RECORD      ------------>
         MVI   R80,C' '           BLANK INPUT RECORD
         MVC   R80+1(L'R80-1),R80
         MVI   0(OPADDR),C'*'     UNDERLINE ERROR AREA WITH ASTERISKS
         EX    OPLEN,MVCASTR
         BAL   R14,PRINTSIR       PRINT UNDERLINE LINE    ------------>
         SUBRET PRNTSIRU
         SPACE
MVCASTR  MVC   1(1,OPADDR),0(OPADDR)  UNDERLINE ASTERISKS
         SPACE
*---------------------------------------------------------------------*
*  CONVERT EXTRACT FIELD POSITION/LENGTH TO BINARY                    *
*  INPUT:  OPADDR - VALUE ADDRESS                                     *
*          R1     - LENGTH OF THE VALUE                               *
*  OUTPUT: R1 - VALUE IN BINARY                                       *
*---------------------------------------------------------------------*
         SPACE
CONVEXB  DS    0H
         BCTR  R1,0               VALUE STRING LENGTH - 1
         EX    R1,PACKDECV        PACK DECIMAL VALUE
         CVB   R1,D               CONVERT IT TO BINARY
         LTR   R1,R1              IS SPECIFIED POSITION/LENGTH = 0 ...?
         BZ    POSLEN0            YES, PRINT ERROR MESSAGE------------>
         BR    R14                RETURN------------------------------>
PACKDECV PACK  D,0(1,OPADDR)      PACK DECIMAL VALUE
         SPACE
*---------------------------------------------------------------------*
*  SEARCH FOR SPECIFIED KEYWORD IN THE TABLE OF KEYWORDS              *
*---------------------------------------------------------------------*
         SPACE
SRCHKWD  SUBENT
         LA    R14,STMTKWT        STMT KEYWORDS TABLE ADDRESS
         USING KWTE,R14           KEYWORD ENTRY FORMAT ADDRESSABILITY
         XR    R15,R15
STMTSKWL IC    R15,KWLEN          KEYWORD LENGTH
         LTR   R15,R15            KEYWORD LENGTH = 0 (UNKNOWN KEYW)...?
         BZ    STMTSKWR           YES, RETURN
         CR    R15,KWLENR         KEWORDS LENGTHS ARE EQUAL ..........?
         BNE   STMTSKWN           NO, CHECK NEXT            ---------->
         BCTR  R15,0              KEYWORD LENGTH - 1
         EX    R15,STMTKCLC       COMPARE KEYWORDS          ..........?
         LA    R15,1(0,R15)       KEYWORD LENGTH
         BNE   STMTSKWN           NON EQUAL, CHECK NEXT     ---------->
         IC    R15,KWCODE         KEWORD FOUND IN THE TABLE
STMTSKWR SUBRET SRCHKWD           RETURN                    ---------->
STMTSKWN LA    R14,3(R15,R14)     NEXT KEYWORD ENTRY ADDRESS
         B     STMTSKWL           CHECK NEXT KEYWORD FROM THE TABLE--->
         SPACE
STMTKCLC CLC   0(1,KWADDR),KWORD  COMPARE KEYWORDS
         DROP  R14
STMTKWT  DS    0CL1               STATEMENT KEYWORDS TABLE
         DC    AL1(4),AL1(4),AL1(0),C'NAME'
         DC    AL1(6),AL1(8),AL1(0),C'KEYLEN'
         DC    AL1(7),AL1(12),AL1(0),C'COMPARE'
         DC    AL1(7),AL1(16),AL1(0),C'EXTRACT'
         DC    AL1(0)             LAST DUMMY ENTRY
         SPACE
*---------------------------------------------------------------------*
*  EXTRACT STMT KEYWORD AND OPERAND FROM SYSIN CONTROL RECORD         *
*---------------------------------------------------------------------*
         SPACE
EXTKWRD  SUBENT
         LA    KWADDR,R80         SYSIN RECORD ADDRESS
         LR    OPADDR,KWADDR
         XR    KWLENR,KWLENR      = 0
         XR    OPLEN,OPLEN        = 0
         LA    R2,72              FIRST 72 BYTES CAN BE USED ONLY
EXTKWRD1 CLI   0(KWADDR),C' '     START OF KEYWORD....................?
         BNE   EXTKWRDF           YES, NONBLANK CHARACTER------------->
         LA    KWADDR,1(,KWADDR)  NEXT CHARACTER ADDRESS
         BCT   R2,EXTKWRD1        CHECK NEXT CHARACTER---------------->
         B     KWINVLD            BLANK SYSIN RECORD, ERROR MESSAGE--->
EXTKWRDF LR    OPADDR,KWADDR      ADDRESS OF FIRST CHAR OF KEYWORD
EXTKWRD2 CLI   0(OPADDR),C' '     END OF STMT KEYWORD.................?
         BE    EXTKWRDO           YES, SEARCH FOR OPERAND------------->
         LA    KWLENR,1(,KWLENR)  LENGTH OF KEYWORD + 1
         LA    OPADDR,1(,OPADDR)  NEXT CHARACTER ADDRESS
         BCT   R2,EXTKWRD2        CHECK NEXT CHARACTER---------------->
         B     EXTKWRDR           COL 73, NO OPERAND SPEC, RETURN----->
EXTKWRDO CLI   0(OPADDR),C' '     START OF OPERAND....................?
         BNE   EXTKWOF            YES, NONBLANK CHARACTER------------->
         LA    OPADDR,1(,OPADDR)  NEXT CHARACTER ADDRESS
         BCT   R2,EXTKWRDO        CHECK NEXT CHARACTER---------------->
         B     EXTKWRDR           COL 73, NO OPERAND SPEC, RETURN----->
EXTKWOF  LR    R1,OPADDR          ADDRESS OF FIRST CHAR OF OPERAND
EXTKWOF1 CLI   0(R1),C' '         END OF OPERAND......................?
         BE    EXTKWRDR           YES, RETURN FROM SUBROUTINE--------->
         LA    OPLEN,1(,OPLEN)    LENGTH OF OPERAND + 1
         LA    R1,1(,R1)          NEXT CHARACTER ADDRESS
         BCT   R2,EXTKWOF1        CHECK NEXT CHARACTER---------------->
EXTKWRDR SUBRET EXTKWRD           RETURN FROM SUBROUTINE
         SPACE
* SYSIN END-OF-FILE PROCESSING
EOFSIN   DS    0H                 SYSIN END-OF-FILE
         OC    SINRCNT,SINRCNT    WAS THERE ANY RECORDS IN SYSIN......?
         BZ    SINEMPTY           NO, EMPTY SYSIN FILE---------------->
         TM    TBLDEFLG,SYSINERF  ANY ERROR IN SYSIN STMT.............?
         BO    TBLDFPER           YES, RETURN WITH ERROR CC----------->
         TM    TBLDEFLG,COMPSPEC+KEYLSPEC EITHER COMPARE OR KEYLEN REQ?
         BZ    TBLNDEF            NEITHER SPECIFIED, ERROR MSG-------->
* "EXTRACT" IS REQUIRED FOR "V" OR "U" TBLIN RECFM
         TM    FLAGS,RECFMF       FIXED FORMAT TBLIN RECORDS..........?
         BO    TBLDFPFR           YES, TABLE IS CORRECTLY DEFINED----->
         OC    NOEXTP,NOEXTP      WAS "EXTRACT" SPECIFIED.............?
         BNZ   TBLDFPR0           YES, TABLE IS CORRECTLY DEFINED----->
* "EXTRACT" NOT SPECIFIED FOR "V" OR "U" RECFM, ERROR
         MVC   MSGREC1(L'EXTREQM),EXTREQM  MOVE MSG TEXT INTO LNE
EOFSINER BAL   R14,PRNTMSG        PRINT MESSAGE
TBLDFPER LA    R15,16             ERROR RETURN CODE
         B     TBLDFPR            RETURN------------------------------>
* SYSIN FILE IS EMPTY MESSAGE
SINEMPTY MVC   MSGREC1(L'SINEMPM),SINEMPM  MOVE MSG TEXT INTO LNE
         B     EOFSINER           PRINT ERROR MSG AND SET ERROR RC---->
* TABLE NOT DEFINED PROPERLY (BOTH COMPARE AND KEYLEN NOT SPEC)
TBLNDEF  MVC   MSGREC1(L'TBLNDEFM),TBLNDEFM  MOVE MSG TEXT INTO LNE
         B     EOFSINER           PRINT ERROR MSG AND SET ERROR RC---->
* KEYLEN > TBLELEN ERROR MESSAGE
KEYLENER MVC   MSGREC1(L'KEYLENEM),KEYLENEM  MOVE MSG TEXT INTO LNE
         B     EOFSINER           PRINT ERROR MSG AND SET ERROR RC---->
* FIXED LENGTH RECORDS IN TBLIN  FILE
TBLDFPFR OC    NOEXTP,NOEXTP      WAS "EXTRACT" SPECIFIED.............?
         BNZ   TBLDFPR0           YES, TABLE IS CORRECTLY DEFINED----->
         MVC   NOEXTP,=H'1'       NO, DEFAULT TO FULL RECORD EXTRACT
         MVC   EXTBL(2),=H'1'     DEFAULT POSITION
         MVC   EXTBL+2(2),TBLIN+82  DEFAULT FIELD LENGTH = LRECL
         MVC   TBLELEN,TBLIN+82   LENGTH OF A TABLE ELEMENT = LRECL
TBLDFPR0 DS    0H               CHECK IF KEYLEN <= TABLE ELEMENT LENGTH
         TM    TBLDEFLG,KEYLSPEC  KEYLEN SPECIFIED....................?
         BNO   TBLDFPRZ           NO, BYPASS CHECK-------------------->
         CLC   KEYLEN,TBLELEN                        .................?
         BH    KEYLENER           ERROR, KEYLEN > TBLELEN------------->
TBLDFPRZ SR    R15,R15            NORMAL RETURN FROM SYSIN PROC,RC=0
TBLDFPR  SUBRET TBLDEFP           RETURN
         SPACE
*---------------------------------------------------------------------*
*  CREATE THE TABLE:                                                  *
*       - READ TBLIN RECORD                                           *
*       - EXTRACT REQUESTED FIELDS                                    *
*       - WRITE IT OUT AS AN ASSEMBLER CONSTANT                       *
*---------------------------------------------------------------------*
         SPACE
IRECL    EQU   R4                 INPUT RECORD LENGTH
IRECADDR EQU   R5                 INPUT RECORD ADDRESS
         SPACE
TBLPROC  SUBENT
GETBLIN0 BAL   R14,GETBLIN        GET TBLIN RECORD
         BAL   R14,EXTBLIN        EXTRACT REQUESTED FIELDS
         LTR   R15,R15            NO ERROR IN EXTRACT.................?
         BNZ   TBLPROCR           ERROR, EXTRACT NOT WITHIN LRECL----->
         BAL   R14,TBLEOUT        WRITE OUT TABLE ELEMENT
*        CHECK IF TBLIN IS SORTED CORRECTLY
         TM    TBLDEFLG,KEYLSPEC  KEYLEN HAS BEEN SPECIFIED...........?
         BNO   GETBLIN0           NO, GET NEXT INPUT RECORD----------->
         CLC   IRECNT,=F'1'       IS IT THE FIRST RECORD OF TBLIN.....?
         BE    GETBLINE           YES, DO NOT CHECK THE SEQUENCE------>
         LH    R1,KEYLEN          NOT FIRST RECORD, SEQUENCE CHECK
         BCTR  R1,0               KEYLEN - 1
         EX    R1,CLCKEYS         COMPARE CURRENT AND PREVIOUS KEY....?
         BNH   SEQERROR           NO, TBLIN SEQUENCE ERROR------------>
GETBLINE MVC   PREVKEY,CURRKEY    RIGHT SEQUENCE, PREVIOUS=CURRENT KEY
         B     GETBLIN0           GET NEXT INPUT RECORD
SEQERROR TM    FLAGS,SEQERRF      SEQUENCE ERROR MSG ALREADY PRINTED..?
         BO    GETBLIN0           YES, CONTINUE (NORMAL RETURN CODE)
         OI    FLAGS,SEQERRF      FLAG SEQUENCE ERROR
         L     R0,IRECNT          INPUT RECORD COUNT
         CVD   R0,D               CONVERT TO DECIMAL
         ED    SEQRCNT,D          EDIT INTO MESSAGE LINE
*        PRINT SEQUENCE ERROR MESSAGE
         MVC   MSGREC1(SEQERRLE-SEQERRL),SEQERRL  RECORD COUNT MSG
         BAL   R14,PRNTMSG        PRINT MESSAGE
         B     GETBLINE
TBLPROCR SUBRET TBLPROC           RETURN
         SPACE
CLCKEYS  CLC   CURRKEY(1),PREVKEY COMPARE KEYS TARGET
SEQERRL  DC    C'0***W A R N I N G*** TBLIN  RECORD OUT OF SEQENCE OR D+
               UPLICATE KEY, REC.NO='
SEQRCNT  DC    X'40202020202020202020202020202120'
SEQERRLE EQU   *
         SPACE
* TBLIN END-OF-FILE
EOFTBLI  DS    0H
         OC    IRECNT,IRECNT      WERE THERE ANY RECORDS IN TBLIN.....?
         BZ    TBLIEMP            NO, EMPTY TBLIN FILE---------------->
         L     R0,IRECNT          INPUT RECORD COUNT
         CVD   R0,D               CONVERT TO DECIMAL
         ED    IRECNTM,D          EDIT INTO MESSAGE LINE
*        PRINT RECORD COUNT MSG
         MVC   MSGREC1(TRLINE1E-TRLINE1),TRLINE1  RECORD COUNT MSG
         BAL   R14,PRNTMSG        PRINT MESSAGE
         L     R0,TBLSIZE         TABLE SIZE IN BYTES
         CVD   R0,D               CONVERT TO DECIMAL
         ED    TBLSIZM,D          EDIT INTO MESSAGE LINE
*        PRINT TABLE SIZE MSG
         MVC   MSGREC1(TRLINE2E-TRLINE2),TRLINE2  TABLE SIZE MSG
         BAL   R14,PRNTMSG        PRINT MESSAGE
         SR    R15,R15            NORMAL RETURN FROM TBLPROC (RC=0)
         B     TBLPROCR           RETURN FROM TBLPROC----------------->
         SPACE
TBLIEMP  MVC   MSGREC1(L'TBLIEMPM),TBLIEMPM  EMPTY TBLIN MESSAGE
         BAL   R14,PRNTMSG        PRINT ERROR MESSAGE
         LA    R15,16             ERROR RETURN CODE
         B     TBLPROCR           RETURN FROM TBLPROC----------------->
         SPACE
TRLINE1  DC    C'0NUMBER OF TBLIN RECORDS/TABLE ELEMENTS :'
IRECNTM  DC    X'40202020202020202020202020202120'
TRLINE1E EQU   *
TRLINE2  DC    C'0TABLE SIZE IS'
TBLSIZM  DC    X'40202020202020202020202020202120'
         DC    C' BYTES  PLUS  LENGTH OF THE TABLE HEADER'
TRLINE2E EQU   *
         SPACE
*---------------------------------------------------------------------*
         SPACE
* GET TBLIN RECORD SUBROUTINE
GETBLIN  SUBENT
         GET   TBLIN              GET LOCATE MODE
         LR    IRECADDR,R1        RECORD ADDRESS
         L     R1,IRECNT          TBLIN RECORD COUNT
         LA    R1,1(,R1)          + 1
         ST    R1,IRECNT          UPDATE RECORD COUNT
         TM    FLAGS,RECFMV       VARIABLE LENGTH RECORDS.............?
         BO    GETBLINV           YES, TAKE RECL FROM RDW------------->
         LH    IRECL,TBLIN+82     NO, F OR U, RECL FROM DCBLRECL
         B     GETBLINR           RETURN                 ------------->
GETBLINV LH    IRECL,0(IRECADDR)  RECFMV, LOAD RECL FROM RDW
GETBLINR SUBRET GETBLIN           RETURN                 ------------->
         SPACE
*---------------------------------------------------------------------*
         SPACE
* EXTRACT FIELDS OF TABLE ELEMENT FROM TBLIN RECORD
EXTOCA   EQU   R6                 OUTPUT AVAILABLE CHARACTER ADDRESS
EXTOLEN  EQU   R7                 EXTRACTED OUTPUT LENGTH
KEYLREG  EQU   R8                 KEY LENGTH REG TO EXTRACT KEY
KEYOCA   EQU   R14                KEY OUTPUT CHARACTER ADDRESS
EXTBLIN  SUBENT
         XR    EXTOLEN,EXTOLEN    LENGTH OF EXTRACTED OUTPUT
         LA    EXTOCA,EXTWRK      ADDRESS OF WORK FIELD FOR EXTRACT
         LH    R3,NOEXTP          NO.OF EXTRACT FIELDS
         LA    R2,EXTBL           EXTRACT PAIRS TABLE ADDRESS
         USING EXTFLDD,R2         ADDRESSABILITY OF EXTRACT FIELD DESC
         LH    KEYLREG,KEYLEN     LENGTH OF KEY (IF SPECIFIED)
         LA    KEYOCA,CURRKEY     CURRENT KEY ADDRESS
EXTBLP   DS    0H                 EXTRACT FIELDS PROCESSING LOOP
*        CHECK IF FIELD IS WITHIN LOGICAL RECORD
         LH    R1,EXTFLDP         FIELD POSITION WITHIN RECORD
         BCTR  R1,0               - 1
         LR    R0,R1
         AH    R0,EXTFLDL         + FIELD LENGTH
         CR    R0,IRECL           IS IT > LRECL.......................?
         BH    EXTBLRE            EXTRACT OUT OF LRECL RANGE ERROR---->
         LA    R1,0(R1,IRECADDR)  ADDRESS OF FIRST CHAR OF EXTRACT FLD
         LH    R15,EXTFLDL        EXTRACT FIELD LENGTH
*        MOVE TABLE ELEMENT KEY (IF SPECIFIED) INTO CURRKEY FIELD
EXTBLFML TM    TBLDEFLG,KEYLSPEC  WAS KEYLEN SPECIFIED................?
         BNO   EXTBLFM1           NO, BYPASS KEY EXTRACTION----------->
         LTR   KEYLREG,KEYLREG    WAS THE KEY ALREADY EXTRACTED.......?
         BNP   EXTBLFM1           YES,BYPASS KEY EXTRACTION CODE------>
         MVC   0(1,KEYOCA),0(R1)  MOVE CHARACTER INTO CURRKEY AREA
         LA    KEYOCA,1(,KEYOCA)  NEXT AVAILABLE BYTE ADDRESS
         BCTR  KEYLREG,0          LENGTH OF EXTRACTED KEY - 1
*        MOVE EXTRACT FIELD INTO WORK AREA,DOUBLE QUOTES AND AMPERSANDS
EXTBLFM1 MVC   0(1,EXTOCA),0(R1)  MOVE CHARACTER INTO OUTPUT WRK AREA
         LA    EXTOCA,1(,EXTOCA)  NEXT AVAILABLE BYTE ADDRESS
         LA    EXTOLEN,1(,EXTOLEN) LENGTH OF OUTPUT STRING + 1
         CLI   0(R1),C''''        IS IT A QUOTE.......................?
         BE    EXTBLFMD           YES, MAKE IT DOUBLE IN WORK AREA---->
         CLI   0(R1),C'&&'        IS IT AN AMPERSAND..................?
         BNE   EXTBLFME           NO, END OF LOOP LABEL--------------->
EXTBLFMD MVC   0(1,EXTOCA),0(R1)  MOVE SECOND QUOTE OR AMPERSAND
         LA    EXTOCA,1(,EXTOCA)  NEXT AVAILABLE BYTE ADDRESS
         LA    EXTOLEN,1(,EXTOLEN) LENGTH OF OUTPUT STRING + 1
EXTBLFME LA    R1,1(,R1)          NEXT CHAR OF EXTRACT FIELD ADDR
         BCT   R15,EXTBLFML       LENGTH OF FIELD - 1 AND REPEAT OR EX
         SPACE
         LA    R2,4(,R2)          NEXT EXTRACT FIELD DESCRIPTION ADDR
         BCT   R3,EXTBLP          EXTRACT NEXT FIELD IF THERE IS ANY
         SR    R15,R15            NORMAL RETURN CODE
         L     R0,TBLSIZE         TABLE SIZE IN BYTES
         AH    R0,TBLELEN         + LENGTH OF A TABLE ELEMENT
         ST    R0,TBLSIZE         UPDATE TABLE SIZE
EXTBLINR SUBRET EXTBLIN           RETURN
         SPACE
* EXTRACT OUT OF LRECL RANGE ERROR
EXTBLRE  DS    0H                 EXTRACT OUT OF LRECL RANGE ERROR
         L     R0,IRECNT          INPUT RECORD COUNT
         CVD   R0,D               CONVERT TO DECIMAL
         ED    IRECNTE,D+4        EDIT INTO MESSAGE LINE
         CVD   IRECL,D            CONVERT LRECL TO DECIMAL
         ED    LRECLE,D+5         EDIT INTO MESSAGE LINE
*        PRINT ERROR MSG
         MVC   MSGREC1(EXTERRLE-EXTERRL),EXTERRL  ERROR MSG
         BAL   R14,PRNTMSG        PRINT MESSAGE
         LA    R15,16             ERROR RETURN CODE
         B     EXTBLINR           RETURN------------------------------>
         SPACE
EXTERRL  DC    C'0EXTRACT FIELD NOT WITHIN LRECL, TBLIN REC.NO.'
IRECNTE  DC    X'4020202020202120'
         DC    C'  LRECL='
LRECLE   DC    X'402020202120'
EXTERRLE EQU   *
         SPACE
*---------------------------------------------------------------------*
         SPACE
* WRITE OUT TABLE ELEMENT (ASSEMBLER DC CONSTANT)
DCSEGL   EQU   56                 NO.OF CHARACTERS IN COLS 16-71
TBLEOUT  SUBENT
         BAL   R14,BLANKR80       BLANK R80 RECORD
         MVC   R80+9(6),=C'DC  C'''  DC OPCODE IN FIRST RECORD
         LA    R2,DCSEGL          NO.OF CHARS AVAILABLE IN COLS 16-72
         LA    EXTOCA,EXTWRK      ADDRESS OF TABLE ELEMENT CHAR.STRNG
TBLEOUTL CR    EXTOLEN,R2         LESS THEN 72-15=57 CHARS LEFT.......?
         BL    TBLEOUTE           YES, LAST SEGMENT OF DC CONSTANT---->
         MVC   R80+15(DCSEGL),0(EXTOCA) MOVE DC SEGMENT INTO R80
         MVI   R80+71,C'+'        CONTINUATION MARK
         PUT   TBLOUT,R80         PUT OUT TBLOUT RECORD
         BAL   R14,BLANKR80       BLANK R80 RECORD
         LA    EXTOCA,DCSEGL(,EXTOCA)  ADDRESS OF NEXT SEGMENT
         SR    EXTOLEN,R2         LENGTH OF LEFT CHAR. STRING
         B     TBLEOUTL           CONTINUE THE CYCLE------------------>
TBLEOUTE LA    R1,R80+15(EXTOLEN) ADDRESS LAST DC SEGMENT ENDING QUOTE
         SH    EXTOLEN,=H'1'      ARE THERE ANY CHARS LEFT............?
         BM    TBLEOUTQ           NO, JUST ENDING QUOTE IN COL 16 REQ->
         EX    EXTOLEN,MVCLDCS    MOVE LAST DC SEGMENT INTO R80
TBLEOUTQ MVI   0(R1),C''''        MOVE ENDING QUOTE
         PUT   TBLOUT,R80         PUT OUT TBLOUT RECORD (LAST DC SEG)
         BAL   R14,BLANKR80       BLANK R80 RECORD
         SUBRET TBLEOUT           RETURN
MVCLDCS  MVC   R80+15(1),0(EXTOCA) MOVE LAST DC SEG.INTO R80
         SPACE
*---------------------------------------------------------------------*
*  PRINT MSG LINE                                                     *
*---------------------------------------------------------------------*
         SPACE
PRNTMSG  SUBENT
         CLI   MSGREC1+1,C'*'     ERROR MSG.......TEST ONLY...........?
         BNE   PRNTMSGE           YES-------------TEST ONLY----------->
*        BAL   R14,SNAPRNT        PRINT DATA******TEST ONLY************
PRNTMSGE CLI   MSGREC1,X'40'      NO SPACING               ...........?
         BE    PRNTMSG1           YES                      ----------->
         CLI   MSGREC1,C'+'       IN THE SAME LINE         ...........?
         BE    PRNTMSG0           YES                      ----------->
         CLI   MSGREC1,C'0'       ONE BLANK LINE           ...........?
         BE    PRNTMSG2           YES                      ----------->
         CLI   MSGREC1,C'-'       TWO BLANK LINES          ...........?
         BE    PRNTMSG3           YES                      ----------->
         MVI   MSGREC1,C'-'       INVALID CONTROL CHAR SECIF., CHANGE
         B     PRNTMSGE           CHECK AGAIN              ----------->
PRNTMSG0 SR    R0,R0              IN THE SAME LINE PRINTING
         B     PRNTMSGL           CHECK IF FITS INTO THE PAGE--------->
PRNTMSG1 LA    R0,1               IN THE NEXT LINE PRINTING
         B     PRNTMSGL           CHECK IF FITS INTO THE PAGE--------->
PRNTMSG2 LA    R0,2               ONE BLANK LINE BEFORE
         B     PRNTMSGL           CHECK IF FITS INTO THE PAGE--------->
PRNTMSG3 LA    R0,3               TWO BLANK LINES BEFORE
PRNTMSGL A     R0,LINECNT         CHECK IF FITS INTO THE PAGE
         C     R0,LINECNTL        LINE COUNT LIMIT EXCEEDED...........?
         BH    PRNTMSGP           YES, NEW PAGE            ----------->
         ST    R0,LINECNT         NO, NEW LINE COUNT
         PUT   PRINT,MSGREC1      NO, PRINT MESSAGE
         MVI   MSGREC1,X'40'      CLEAR MSGREC1
         MVC   MSGREC1+1(L'MSGREC1-1),MSGREC1
         SUBRET PRNTMSG
PRNTMSGP BAL   R14,NEWPAGE        NEW PAGE
         MVI   MSGREC1,X'40'      NO SPACING REQUIRED AFTER NEW PAGE
         B     PRNTMSGE           PRINT MESSAGE AFTER NEW PAGE
         SPACE
*---------------------------------------------------------------------*
*  PRINT NEW PAGE HEADER                                              *
*---------------------------------------------------------------------*
         SPACE
NEWPAGE  SUBENT
         LH    R1,PAGENO          CURRENT PAGE NUMBER
         CVD   R1,D               CONVERT TO DECIMAL
         LA    R1,1(0,R1)         NEXT PAGE NUMBER
         STH   R1,PAGENO
         MVC   HPAGENO,=X'402020202120' EDIT MASK
         ED    HPAGENO,D+5        EDIT PAGE NUMBER
         TIME
         ST    R1,FULLW           DATE IN 00YYDDDF FORMAT
         MVC   HDATE,=X'4020204B202020'
         ED    HDATE,FULLW+1      EDIT DATE INTO HEADER LINE
         PUT   PRINT,HEADLNE1
         LA    R0,2               LINE COUNT = 2
         ST    R0,LINECNT
         MVI   MSGREC,X'40'
         MVC   MSGREC+1(L'MSGREC-1),MSGREC
         PUT   PRINT,MSGREC       ONE BLANK LINE
         SUBRET NEWPAGE
         SPACE
HEADLNE1 DS    0CL133             HEADLINE NUMBER 1
         DC    CL110'1JJTBGEN  - LIST OF SYSIN CONTROL STATEMENTS'
HDATE    DC    CL7' '
         DC    C'      PAGE'
HPAGENO  DS    CL6                PAGE NUMBER
         SPACE
*---------------------------------------------------------------------*
*  PRINT 1 BLANK LINE                                                 *
*---------------------------------------------------------------------*
         SPACE
BLANKLNE SUBENT
         BAL   R14,LNECNTP1       LINE COUNT + 1
         CLC   LINECNT,LINECNTL   WILL FIT INTO THIS PAGE.............?
         BH    BLNKLNPG           NO,  PRINT NEW PAGE HEADER---------->
         MVI   MSGREC,X'40'
         MVC   MSGREC+1(L'MSGREC-1),MSGREC
         PUT   PRINT,MSGREC
BLNKLRET SUBRET BLANKLNE          RETURN TO CALLER
BLNKLNPG BAL   R14,NEWPAGE        NEW PAGE
         B     BLNKLRET           RETURN
         SPACE
*---------------------------------------------------------------------*
*  LINE COUNT + 1                                                     *
*---------------------------------------------------------------------*
         SPACE
LNECNTP1 DS    0H                 LINE COUNT + 1
         LA    R0,1               LINE COUNT + 1
         A     R0,LINECNT
         ST    R0,LINECNT
         BR    R14                RETURN TO CALLER
         SPACE
*---------------------------------------------------------------------*
*  INITIALISATION OF PROGRAM ( SOME CONSTANTS )                       *
*---------------------------------------------------------------------*
         SPACE
INIT     DS    0H
         MVC   LINECNT,=F'64'     FORCE NEW PAGE AT THE BEGINING
         MVC   LINECNTL,=F'64'    DEFAULT PAGE LINE COUNT
         MVC   PAGENO,=H'1'       FIRST PAGE NUMBER
         MVI   FLAGS,X'00'        INIT OF FLAGS
         SR    R0,R0
         ST    R0,IRECNT          COUNTERS TO ZERO
         ST    R0,TBLSIZE         COUNTERS TO ZERO
         STH   R0,TBLELEN         COUNTERS TO ZERO
         SPACE
         EXTRACT TIOTA,FIELDS=TIOT EXTRACT TO GET JOBNAME
         L     R1,TIOTA           TIOT ADDRESS
         MVC   JOBNAME,0(R1)      SAVE JOB NAME
         BR    R14                RETURN TO CALLER
         SPACE
*---------------------------------------------------------------------*
*     DCB EXIT FOR PRINT FILE ( SETS UP DEFAULT BLKSIZE )             *
*---------------------------------------------------------------------*
         SPACE
PRTDCBEX DS    0H                 EXIT IF BLKSIZE NOT SPECIFIED        +
                                  MSG DATA SET
         USING IHADCB,R1          DCB ADDRESSABILITY
         LH    R2,DCBBLKSI        LOAD BLKSIZE
         LTR   R2,R2              BLKSIZE=0 ..........................?
         BNZR  R14                NO,RETURN <----------------
         MVC   DCBBLKSI,DCBLRECL  BLKSIZE=LRECL========================
         BR    R14                RETURN    <----------------
         DROP  R1
         SPACE
*---------------------------------------------------------------------*
*     DCB EXIT FOR TBLOUT FILE ( SETS UP DEFAULT BLKSIZE )            *
*---------------------------------------------------------------------*
         SPACE
TBLDCBEX DS    0H                 EXIT IF BLKSIZE NOT SPECIFIED        +
                                  TBLOUT DATA SET
         USING IHADCB,R1          DCB ADDRESSABILITY
         LH    R2,DCBBLKSI        LOAD BLKSIZE
         LTR   R2,R2              BLKSIZE=0 ..........................?
         BNZR  R14                NO,RETURN <----------------
         MVC   DCBBLKSI,=AL2(800) BLKSIZE=800  ========================
         BR    R14                RETURN    <----------------
         DROP  R1
         SPACE
CLOSE    DS    0H                 FINAL CLOSE OF FILES
         CLOSE (PRINT,,SYSIN,,TBLOUT,,TBLIN)
         BR    R14                RETURN TO CALLER
         SPACE
*---------------------------------------------------------------------*
*  END OF PROCESSING MESSAGE                                          *
*---------------------------------------------------------------------*
         SPACE
EOPMSG   SUBENT
         MVC   MSGREC1(L'EOPMSGT),EOPMSGT MESSAGE TEXT INTO MESSAGE REC
         BAL   R14,PRNTMSG        PRINT MESSAGE
         SUBRET EOPMSG            RETURN
         SPACE
*---------------------------------------------------------------------*
*  END OF PROCESSING WITH ERROR MESSAGE                               *
*---------------------------------------------------------------------*
         SPACE
EOPERM   SUBENT
         MVC   MSGREC1(L'EOPERMS),EOPERMS MESSAGE TEXT INTO MESSAGE REC
         BAL   R14,PRNTMSG        PRINT MESSAGE
         SUBRET EOPERM            RETURN
         SPACE
*--------D C B S,  C O N S T A N T S,  D A T A,  M S G S--------------*
         SPACE
*  MESSAGE DATA SET
         SPACE
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBA,            +
               LRECL=133,EXLST=PRTEXLST
         SPACE
*  TABLE DEFINITION INPUT FILE (CONTROL STMTS)
         SPACE
SYSIN    DCB   DSORG=PS,MACRF=(GM),DDNAME=SYSIN,                       +
               RECFM=FB,LRECL=80,EODAD=EOFSIN
         SPACE
*  INPUT FILE (TABLE CONTENTS)
         SPACE
TBLIN    DCB   DSORG=PS,MACRF=(GL),DDNAME=TBLIN,EODAD=EOFTBLI
         SPACE
*  OUTPUT FILE
         SPACE
TBLOUT   DCB   DSORG=PS,MACRF=(PM),DDNAME=TBLOUT,RECFM=FB,LRECL=80,    +
               EXLST=TBLEXLST
         SPACE
TBLEXLST DS    0F                 TBLOUT DCB EXLST
         DC    X'85',AL3(TBLDCBEX) EXIT FOR BLKSIZE NOT SPECIFIED
         SPACE
PRTEXLST DS    0F                 PRINT DCB EXLST
         DC    X'85',AL3(PRTDCBEX) EXIT FOR BLKSIZE NOT SPECIFIED
         SPACE
EOPMSGT  DC    C'-JJTBGEN      E N D    O F    P R O C E S S I N G'
EOPERMS  DC    C'-JJTBGEN      T E R M I N A T E D    D U E    T O    P+
                R E V I O U S    E R R O R'
SINOPNEM DC    C'-JJTBGEN    SYSIN DCB COULD NOT BE OPENED. PROCESSING +
               TERMINATED, RC = 16'
OUTOPNEM DC    C'-JJTBGEN    TBLOUT DCB COULD NOT BE OPENED. PROCESSING+
                TERMINATED, RC = 16'
INOPNEM  DC    C'-JJTBGEN    TBLIN  DCB COULD NOT BE OPENED. PROCESSING+
                TERMINATED, RC = 16'
INVRFMM  DC    C'-JJTBGEN    TBLIN  HAS AN INVALID RECORD FORMAT SPECIF+
               IED, PROCESSING TERMINATED, RC = 16'
PRTOPNEM WTO   'JOBNAME , JJTBGEN   SYSPRINT DCB COULD NOT BE OPENED. P+
               ROCESSING TERMINATED',MF=L
         SPACE
DUPSTMTM DC    C'***** E R R O R ***** DUPLICATE STATEMENT'
OPERMISM DC    C'***** E R R O R ***** MISSING OPERAND IN THE ABOVE STA+
               TEMENT'
NAMELENM DC    C'***** E R R O R ***** CSECT/EXIT NAME LENGTH IS GREATE+
               R THAN 8 CHARACTERS'
COMPKLMX DC    C'***** E R R O R ***** COMPARE AND KEYLEN ARE MUTUALLY +
               EXCLUSIVE STMTS'
INVKEYLM DC    C'***** E R R O R ***** SPECIFIED KEYLEN IS INVALID'
INVSTMTM DC    C'***** E R R O R ***** UNRECOGNIZED STATEMENT SPECIFIED+
               '
SYNTERM  DC    C'***** E R R O R ***** EXTRACT STMT, SYNTAX ERROR'
EXFRNGEM DC    C'***** E R R O R ***** EXTRACT FIELD NOT WITHIN TBLIN''+
               S LRECL'
POSLEN0M DC    C'***** E R R O R ***** EXTRACT POSITION/LENGTH = ZERO I+
               S NOT ALLOWED'
EXTBLFM  DC    C'***** E R R O R ***** ONLY UP TO 200 EXTRACT FIELDS CA+
               N BE SPECIFIED'
EXTREQM  DC    C'0***** E R R O R ***** EXTRACT STATEMENT IS REQUIRED I+
               F TBLIN   RECFM = V OR U'
TBLNDEFM DC    C'0***** E R R O R ***** EITHER KEYLEN OR COMPARE STMT I+
               S REQUIRED TO DEFINE THE TABLE'
SINEMPM  DC    C'0***** E R R O R ***** SYSIN CONTROL FILE IS EMPTY'
TBLIEMPM DC    C'0***** E R R O R ***** TBLIN  FILE IS EMPTY'
KEYLENEM DC    C'0***** E R R O R ***** KEYLEN IS GREATER THAN TABLE EL+
               EMENT LENGTH'
         SPACE
DSAS     DC    A(DSAE-DSA)        DSA SIZE
TIOTA    DS    A                  ADDRESS OF TIOT
MAXEXTP  DC    H'200'             MAX.NO.OF EXTRACT PAIRS THAT CAN BE
*                                 SPECIFIED IN EXTRACT STMTS
         LTORG
         SPACE
*  DYNAMIC STORAGE AREA
DSA      DSECT
SA       DS    18F                SAVE AREA
R80      DS    CL80               80 BYTES OUTPUT RECORD
CSECTNM  DS    CL8                TABLE CSECT NAME
SINRCNT  DS    F                  SYSIN FILE RECORD COUNT
LINECNT  DS    F                  PAGE LINE COUNT
LINECNTL DS    F                  PAGE LINE COUNT LIMIT
IRECNT   DS    F                  INPUT RECORD COUNT
TBLSIZE  DS    F                  SIZE OF THE TABLE IN BYTES
PAGENO   DS    H                  SYSPRINT PAGE NUMBER
LRECL    DS    H                  LRECL SPECIFIED FOR SYSUT1
TBLELEN  DS    H                  LENGTH OF THE TABLE ELEMENT
KEYLEN   DS    H                  LENGTH OF THE KEY IF SPECIFIED
TRT      DS    CL256              TRANSLATE AND TEST TABLE
JOBNAME  DS    CL8                JOB NAME
MSGREC   DS    CL133              MESSAGE RECORD
MSGREC1  DS    CL133              MESSAGE RECORD
         SPACE
FLAGS    DC    X'00'              FLAGS
RECFMF   EQU   BIT0               SYSUT1 RECFM=F SPECIFIED
RECFMV   EQU   BIT1               SYSUT1 RECFM=V SPECIFIED
RECFMU   EQU   BIT2               SYSUT1 RECFM=U SPECIFIED
SEQERRF  EQU   BIT7               TBLIN SEQUENCE ERROR FLAG
         SPACE
TBLDEFLG DC    X'00'              TABLE DEFINITION FLAGS
NAMESPEC EQU   BIT0               CSECT NAME ALREADY SPECIFIED FLAG
COMPSPEC EQU   BIT1               COMPARE EXIT ALREADY SPECIFIED FLAG
KEYLSPEC EQU   BIT2               KEYLEN ALREADY SPECIFIED FLAG
SYSINERF EQU   BIT7               ERROR IN SYSIN STMT
         SPACE
ZONED    DS    ZL15               ZONED WORK FIELD
WRK15    EQU   ZONED
D        DS    D                  WORK DOUBLEWORD
FULLW    DS    F                  WORK FULLWORD
NOEXTP   DS    H                  NO.OF EXTRACT PAIRS PSECIFIED
EXTBL    DS    200F               EXTRACT TABLE (TWO HALFWORDS:
CURRKEY  DS    CL256              CURRENT TABLE ELEMENT KEY
PREVKEY  DS    CL256              PREVIOUS TABLE ELEMENT KEY
EXTWRK   DS    32CL1024           EXTRACT WORK AREA (32K)
DSAE     EQU   *                  DSA END
         SPACE
         DCBD  DSORG=PS
         SPACE 2
*  EXTRACT FIELD DESCRIPTION DSECT
EXTFLDD  DSECT
EXTFLDP  DS    H                  EXTRACT FIELD POSITION WITHIN LREC
EXTFLDL  DS    H                  LENGTH OF EXTRACT FIELD
         SPACE 2
*  STMT KEYWORD TABLE ENTRY FORMAT
KWTE     DSECT
KWLEN    DS    XL1                KEYWORD LENGTH
KWCODE   DS    XL1                KEYWORD CODE
KWFLAGS  DS    XL1                KEYWORD FLAGS
* FLAGS ARE NOT USED IN THIS PROGRAM
KWORD    DS    CL30               KEYWORD ITSELF
         END   JJTBGEN
