//*.......  JOB  ....YOUR JOBCARD......
//*
//ASM      EXEC PGM=ASMA90,PARM='OBJECT,NODECK,LINECOUNT(64)'
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//SYSPUNCH DD DUMMY
//SYSUT1   DD UNIT=VIO,SPACE=(1024,(120,120))
//SYSLIN   DD UNIT=VIO,SPACE=(3040,(40,40),RLSE),
//            DCB=(RECFM=FBS,LRECL=80,BLKSIZE=0),
//            DSN=&&SYSLIN,DISP=(NEW,PASS)
//SYSIN    DD *
      TITLE 'CONVERT VB RECORDS INTO FB'
* CONVERSION OF VB RECORDS INTO FB FORMAT
*
* SPECIFICATIONS:
*
* MODULE NAME: OFDVBFB
*
* ATTRIBUTES : STANDARD
*              RMODE 24
*              AMODE 24
*
* FUNCTION   :
*
*      PROGRAM CONVERTS VARIABLE RECORDS TO FIXED. IF INPUT RECORD IS
*   LONGER THAN OUTPUT RECORD LENGTH, IT GETS TRUNCATED BEFORE BEING
*   WRITTEN OUT. FOR INPUT RECORDS SHORTER THAN OUTPUT RECORD LENGTH -
*   OUTPUT RECORD IS PADDED WITH BLANKS.
*
* INPUT TO THE PROGRAM:
*
* .VBIN - INPUT FILE (RECFM=V)
*
* .FBOUT  - OUTPUT FILE WITH RECFM=F
*
* HERE IS A SAMPLE JCL TO RUN THE PROGRAM:
*
*     //VBTOFB   EXEC PGM=OFDVBFB
*     //STEPLIB    DD DSN=SYS2.TLINKLIB,DISP=SHR
*     //VBIN       DD DSN=........
*     //FBOUT      DD DSN=XXXXX.YYYYY,UNIT=DISK,SPACE=(TRK,(1,1)),
*     //              DISP=(NEW,CATLG),LRECL=NNNN
*
*
* WRITTEN BY: JANEK JAKUBEK
*                DEC. 1991
*
* CHANGE ACTIVITY:
*   MAY 30/2001JJ:
*   INCLUDED TSTAMP MACRO INLINE, ADDED RMODE/AMODE 24 + JCL WRAP
*
*
*
         MACRO
&NAME    TSTAMP
.*
.*  DATE AND TIME STAMP MACRO
.*  GENERATES A CONSTANT WITH DATE AND TIME OF PROGRAM COMPILATION
.*
         LCLC  &STAMP
&STAMP   SETC  'COMPILATION DATE='.'&SYSDATE'.' TIME='.'&SYSTIME'
&NAME    DC    C'&STAMP'
         MEND
OFDVBFB  CSECT                    CSECT NAME
OFDVBFB  AMODE 24
OFDVBFB  RMODE 24
         USING OFDVBFB,R15
         SAVE  (14,12)            SAVE REGISTERS
         B     AROUNDTS           BRANCH AROUND TIME STAMP
         TSTAMP
         PRINT NOGEN
AROUNDTS CNOP  0,4                ALIGNEMENT ON A FULLWORD BOUNDARY
         BAL   R2,SAE             SET SAVE AREA ADDRESS
SA       DS    18F                SAVE AREA
         DROP  R15
         USING SA,R2
SAE      ST    R13,SA+4           CHAIN
         ST    R2,8(R13)          SAVE AREAS
         LR    R13,R2             CURRENT SAVE AREA
         DROP  R2
         USING SA,R13             PROGRAM BASE REGISTER
         SPACE
* REGISTERS EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
* TWO PAIRS OF REGISTERS BELOW HAVE TO BE EVEN/ODD PAIRS
*//////////////////////////////////////////////////////////////////////
OUTRADR  EQU   R2                OUTPUR RECORD ADDRESS
OUTRLEN  EQU   R3                OUTPUR RECORD ADDRESS
*//////////////////////////////////////////////////////////////////////
INRDADR  EQU   R4                INPUT RECORD DATA ADDRESS
INRDLEN  EQU   R5                INPUT RECORD DATA LENGTH
*//////////////////////////////////////////////////////////////////////
DCBADR   EQU   R1                DCB ADDRESS REGISTER
LNKREG1  EQU   R6                LINK REGISTER FOR SUBROUTINE CALLS
         SPACE
*   BITS EQUATES
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         SPACE
*  OPEN VBIN (INPUT) FILE
         OPEN  (VBIN)
         LA    DCBADR,VBIN        DCB ADDRESS
         USING IHADCB,DCBADR      ADDRESSIBILITY ON DCB
         TM    DCBOFLGS,DCBOFOPN  OPEN SUCCESSFUL.....................?
         BNO   VBINOE             NO, VBIN OPEN ERROR----------------->
         TM    DCBRECFM,DCBRECV   VARIABLE RECORD LENGTH..............?
         BNO   VBINVE             NO, NOT A VARIABLE RECORD----------->
*  OPEN OUTPUT FBOUT FILE (RECFM=F)
         OPEN  (FBOUT,(OUTPUT))
         LA    DCBADR,FBOUT       DCB ADDRESS
         TM    DCBOFLGS,DCBOFOPN  OPEN SUCCESSFUL.....................?
         BNO   FBOUTOE            NO, FBOUT OPEN ERROR---------------->
         TM    DCBRECFM,DCBRECF   FIXED RECORD LENGTH.................?
         BNO   FBOUTNF            NO, NOT A FIXED RECORD-------------->
         LH    R0,DCBLRECL        LOAD THE LOGICAL RECORD LENGTH
         STH   R0,OUTRECL         SAVE IT FOR LATER USE
         GETMAIN R,LV=(0)         GET STORAGE FOR OUTPUT RECORD
         ST    R1,OUTRECA         SAVE THE OUTPUT RECORD ADDRESS
*
* READ THE VBIN FILE AND PROCESS THE RECORDS
*
GETVBREC DS   0H
         GET  VBIN                GET THE VBIN RECORD
         LH   INRDLEN,0(R1)       INPUT RECORD LENGTH
         SH   INRDLEN,=H'4'       - 4 = DATA LENGTH
         LA   INRDADR,4(,R1)      INPUT RECORD DATA ADDRESS
         ICM  INRDLEN,B'1000',=X'40'  INSERT PAD CHARACTER
         L    OUTRADR,OUTRECA     OUTPUT RECORD ADDRESS
         LH   OUTRLEN,OUTRECL     OUTPUT RECORD LENGTH
         MVCL OUTRADR,INRDADR     MOVE INPUT RECORD DATA TO THE OUTPUT
*                                 RECORD AREA WITH TRUNCATION/PADDING
         L    R0,OUTRECA          OUTPUT RECORD ADDRESS
         PUT  FBOUT,(0)           WRITE IT OUT AS AN FB
         B    GETVBREC            GET NEXT INPUT RECORD
         SPACE
*---------------------------------------------------------------------*
* END OF VBIN FILE, ALL RECORD PROCESSED                              *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EOFVBIN  DS   0H                  END OF INPUT FILE
         L     R1,OUTRECA         OUTPUT RECORD ADDRESS
         LH    R0,OUTRECL         OUTPUT RECORD LENGTH
         FREEMAIN R,LV=(0),A=(1)  FREE OUTPUT RECORD AREA
         BAL   LNKREG1,CVBIN      CLOSE THE INPUT FILE
         BAL   LNKREG1,CFBOUT     CLOSE THE OUTPUT FILE
RET0     SR    R15,R15            RC = 0 ( NORMAL COMPLETION )
RETNZ    L     R13,SA+4           PREVIOUS SAVE AREA ADDRESS
         RETURN (14,12),RC=(15)   RETURN
         SPACE
CVBIN    CLOSE (VBIN)             CLOSE THE INPUT FILE
         BR    LNKREG1            RETURN
CFBOUT   CLOSE (FBOUT)            CLOSE THE OUTPUT FILE
         BR    LNKREG1            RETURN
         SPACE
RC16     LA    R15,16             ERROR RETURN CODE
         B     RETNZ              NON-ZERO RETURN CODE
         SPACE
VBINOE   DS    0H                 VBIN DCB OPEN ERROR
         WTO   'OFDVBFB   - VBIN    DATA SET CANNOT BE OPENED',        +
               MCSFLAG=(HRDCPY)
         B     RC16
         SPACE
VBINVE   DS    0H                 VBIN NOT VARIABLE LENGTH RECORDS
         WTO   'OFDVBFB   - VBIN    DOES NOT CONTAIN VARIABLE LENGTH RE+
               CORDS',MCSFLAG=(HRDCPY)
         BAL   LNKREG1,CVBIN      CLOSE THE INPUT FILE
         B     RC16
         SPACE
FBOUTOE  DS    0H                 FBOUT DCB OPEN ERROR
         WTO   'OFDVBFB   - FBOUT   DATA SET CANNOT BE OPENED',        +
               MCSFLAG=(HRDCPY)
         BAL   LNKREG1,CVBIN      CLOSE THE INPUT FILE
         B     RC16
         SPACE
FBOUTNF  DS    0H                 FBOUT NOT VARIABLE LENGTH RECORDS
         WTO   'OFDVBFB   - FBOUT   DOES NOT CONTAIN FIXED LENGTH RECOR+
               DS',MCSFLAG=(HRDCPY)
         BAL   LNKREG1,CVBIN      CLOSE THE INPUT FILE
         BAL   LNKREG1,CFBOUT     CLOSE THE OUTPUT FILE
         B     RC16
         SPACE
*  INPUT VBIN FILE
VBIN     DCB   DSORG=PS,MACRF=GL,DDNAME=VBIN,EODAD=EOFVBIN
         SPACE
*  CONVERTED FBOUT RECORDS OUTPUT SEQUENTIAL FILE
FBOUT    DCB   DSORG=PS,MACRF=PM,DDNAME=FBOUT
         SPACE
OUTRECA  DS    A                  OUTPUT RECORD ADDRESS
OUTRECL  DS    H                  OUTPUT RECORD LENGTH
         LTORG
         SPACE
         DCBD  DSORG=PS
         END   OFDVBFB
//*
//LKED     EXEC PGM=IEWL,
//         PARM='NCAL,LET,LIST,XREF'
//SYSLMOD  DD DISP=SHR,DSN=...YOUR.LOADLIB....
//SYSUT1   DD UNIT=VIO,SPACE=(TRK,(10,10))
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&&SYSLIN,DISP=(OLD,DELETE)
//         DD DDNAME=SYSIN
//SYSIN    DD *
 NAME OFDVBFB(R)
/*
