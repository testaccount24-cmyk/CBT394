//.......  JOB ......YOUR JOB CARD
//*
//*
//ASM      EXEC PGM=ASMA90,PARM='OBJECT,NODECK,LINECOUNT(64)'
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//SYSPUNCH DD DUMMY
//SYSUT1   DD UNIT=VIO,SPACE=(1024,(120,120))
//SYSLIN   DD UNIT=VIO,SPACE=(3040,(40,40),RLSE),
//            DCB=(RECFM=FBS,LRECL=80,BLKSIZE=0),
//            DSN=&&SYSLIN,DISP=(NEW,PASS)
//SYSIN    DD *
         TITLE 'DELETE ALL MEMBERS OF A PDS DATA SET'
* DELETE PDS MEMBERS ROUTINE
*
* SPECIFICATIONS:
*
* MODULE NAME: JJPDSD
*
* FUNCTION = SEE BELOW
*
*          THIS ROUTINE CAN DELETE ALL MEMBERS FROM A PDS LIBRARY.
*       IT MAY BE HELPFUL IN MAINTAINING SOURCE, OBJECT, LOAD, JCL
*       LIBRARIES. CHANGED MEMBERS CAN BE DELETED FROM TARGET LIBRARY,
*       THEN TARGET LIBRARY CAN BE COMPRESSED AND THEN NEW MEMBERS
*       COPIED INTO IT. THIS USED TO BE USED IN AN IN HOUSE CHANGE
*       MANAGEMENT WHERE UPDATED MEMBERS WERE PLACED IN STAGING
*       PDS'ES. THIS IS BECAUSE "PDS" AND "PDSD" DD'S CAN BE
*       DIFFERENT DATASETS (IF THEY ARE THE SAME - ALL MEMBERS
*       WILL BE DELETED).
*          THE PROGRAM WORKS AGAINST PDSE DATASETS AS WELL (
*       APPARENTLY FASTER THAN AGAINST A PDS).
*
*    INPUT TO THE ROUTINE:
*
*         . PDS    - TARGET PDS LIBRARY
*         . PDSD   - DDNAME FOR DIRECTORY PROCESSING
*                    MEMBER NAMES FROM THIS DIRECTORY ARE WRITTEN INTO
*                    SYSUT1 AND THEN DELETED FROM PDS.
*
*    INPUT - OUTPUT      :
*
*         . SYSUT1 - WORK DATA SET, MEMBER NAMES TO BE DELETED
*
* WRITTEN BY: JANEK JAKUBEK, OGL
*         JUNE  1983
*
* A SAMPLE JCL PROC CAN BE SET UP TO RUN THE PROGRAM :
* //PDSDEL   PROC DISP=OLD                                                000300
* //*---------------------------------------------------------------***   000400
* //*&  DELETES ALL MEMBERS FROM A PDS DATA SET                     ***   000410
* //*---------------------------------------------------------------***   000500
* //PDSDEL  EXEC PGM=JJPDSD
* //STEPLIB   DD DSN=...,DISP=SHR
* //PDS       DD DSN=&PDS,DISP=SHR
* //PDSD      DD DSN=&PDS,DISP=SHR
* //SYSUT1    DD UNIT=SYSDA,SPACE=(TRK,(1,1))
* //*---------------------------------------------------------------***   000400
* //*&  COMPRESS DELETED PDS TO RECLAIM RELEASED SPACE              ***   000300
* //*&  COMPRESS STEP IS NOT REQUIRED FOR PDSE                      ***   000300
* //*---------------------------------------------------------------***   000400
* //CMPRSS  EXEC PGM=IEBCOPY                                              000400
* //SYSPRINT  DD SYSOUT=*                                                 000500
* //INOUT     DD DSN=&PDS,DISP=&DISP                                      000600
* //SYSUT3    DD  SPACE=(CYL,(1,1),,CONTIG),UNIT=SYSDA                    000700
* //SYSUT4    DD  SPACE=(CYL,(1,1),,CONTIG),UNIT=(SYSDA,SEP=SYSUT3)       000800
* //SYSIN     DD  DSN=.....PARMLIB(CMPRS),DISP=SHR                        000900
*
* CHANGE ACTIVITY:
*                 NONE
*
         PRINT NOGEN
JJPDSD1  CSECT                    CSECT NAME
JJPDSD1  AMODE 24
JJPDSD1  RMODE 24
         DC    C'JJPDSD ',AL1(7)
JJPDSD   SAVE  (14,12)            SAVE REGISTERS
         USING JJPDSD,R15
         ENTRY JJPDSD             ENTRY POINT
         SPACE
* REGISTERS EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
*   BITS EQUATES
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         SPACE
EDBA     EQU   R11                END OF DIRECTORY BLOCK ADDRESS
DIREAR   EQU   R9                 DIRECTORY ENTRY ADDRESS
WRKR1    EQU   R8                 WORK REGISTER 1
DCBOFOPN EQU   X'10'              DCB OPENED FLAG
         SPACE
         CNOP  0,4                ALIGNEMENT ON A FULLWORD BOUNDARY
         BAL   WRKR1,SAE          SAVE AREA ADDRESS
         DROP  R15
SA       DS    18F                SAVE AREA
         USING SA,WRKR1
SAE      ST    R13,SA+4           CHAIN
         ST    WRKR1,8(R13)       SAVE AREAS
         LR    R13,WRKR1          CURRENT SAVE AREA
         DROP  WRKR1
         USING SA,R13             PROGRAM BASE REGISTER
         USING DIRE,DIREAR        DIRECTORY ENTRY ADDRESSABILITY
         SPACE
*  OPEN DIRECTORY ( PDSD )
         SPACE
         OPEN  (PDSD,(INPUT))
         TM    PDSD+48,DCBOFOPN   OPEN SUCCESSFUL        .............?
         BNO   PDSDOPNE           NO, OPEN ERROR         ------------->
         SPACE
*  OPEN PDS INPUT DATA SET
         SPACE
         OPEN  (PDS,(UPDAT))
         TM    PDS+48,DCBOFOPN    OPEN SUCCESSFUL        .............?
         BNO   PDSOPNER           NO, OPEN ERROR         ------------->
*  OPEN WORK FILE ( SYSUT1 )
         SPACE
         OPEN  (WRK,(OUTPUT))
         TM    WRK+48,DCBOFOPN    OPEN SUCCESSFUL        .............?
         BNO   OUTOPNER           NO, OPEN ERROR         ------------->
         SPACE
*  READ DIRECTORY BLOCK
         SPACE
READDB   GET   PDSD,DIRB          READ DIRECTORY BLOCK
         LH    EDBA,DIRB          NO. OF ACTIVE DIRECTORY BYTES
         LA    EDBA,DIRB(EDBA)    END OF DIRECTORY BLOCK ADDRESS
         LA    DIREAR,DIRB+2      FIRST ENTRY ADDRESS
         SPACE
MBRPROC  DS    0H                 MEMBER PROCESSING
         CLC   MNAME,DIRENDC      END OF DIRECTORY....................?
         BE    EODIR              YES, END OF INPUT DIRECTORY--------->
         MVC   MBRNAME,MNAME      MEMBER NAME INTO WORK RECORD
         PUT   WRK,MBRNAME        WRITE RECORD WITH MEMBER NAME
         SPACE
         XR    WRKR1,WRKR1       DETERMINATION OF CURRENT DIR ENTRY LEN
         IC    WRKR1,NH           NO OF USER DATA HALFWORDS
         SLL   WRKR1,27           LOOSE ALIAS AND NO.OF TTRS DATA
         SRL   WRKR1,26           NO.OF HALFWORDS * 2 = NO.OF BYTES
         LA    DIREAR,DIRE+12(WRKR1) NEXT DIR ENTRY ADDRESS
         CR    DIREAR,EDBA        END OF DIRECTORY BLOCK ALREADY......?
         BL    MBRPROC            NO, PROCESS NEXT DIR ENTRY---------->
         B     READDB             YES, READ NEXT DIR BLOCK
         SPACE
EODIR    DS    0H                 END OF INPUT DIRECTORY
         CLOSE (PDSD,,WRK)
         OPEN  (WRK,(INPUT))      OPEN WORK FILE AS INPUT
READMN   GET   WRK,MBRNAME        GET MEMBER NAME
         STOW  PDS,MBRNAME,D
         B     READMN
EOFWRK   DS    0H                 END OF WORK FILE
CLOSE    CLOSE (PDS,,WRK)         CLOSE FILES AND TERMINATE
         SPACE
RET0     XR    R15,R15            RC=0
RET      L     R13,SA+4           PREVIOUS SAVE AREA ADDRESS
         RETURN (14,12),RC=(15)
         SPACE
RC16     LA    R15,16             RC FROM SAVE = 16
         B     RET                RETURN
         SPACE
PDSDOPNE DS    0H                 PDSD DCB OPEN ERROR
         LA    R1,PDSDOEMA
         B     WTO                WRITE MESSAGE TO OPERATOR
         SPACE
PDSOPNER DS    0H                 PDS DCB OPEN ERROR
         LA    R1,PDSOEMA
         B     WTO                WRITE MESSAGE TO OPERATOR
         SPACE
OUTOPNER DS    0H                 OUT DCB OPEN ERROR
         LA    R1,OUTOEMA
WTO      LINK  EP=WTO             WRITE ERROR MESSAGE
         B     RC16               RETURN CODE = 16
         SPACE
         LTORG
         DS    0F
DIRB     DS    CL256              DIRECTORY BLOCK
PDSDOEMA DC    X'80',AL3(PDSDOEM) ERROR MESSAGE ADDRESS
PDSOEMA  DC    X'80',AL3(PDSOEM)  ERROR MESSAGE ADDRESS
OUTOEMA  DC    X'80',AL3(OUTOEM)  ERROR MESSAGE ADDRESS
PDSDOEM  DC    AL2(PDSDOEME-PDSDOEM-2),C'INPUT PDS DATA SET DIRECTORY C+
               ANNOT BE OPEN'
PDSDOEME EQU   *
PDSOEM   DC    AL2(PDSOEME-PDSOEM-2),C'INPUT PDS DATA SET CANNOT BE OPE+
               N'
PDSOEME  EQU   *
OUTOEM   DC    AL2(OUTOEME-OUTOEM-2),C'OUTPUT ( DDNAME = SYSUT1 ) DATA +
               SET CANNOT BE OPEN'
OUTOEME  EQU   *
DIRENDC  DC    8X'FF'             LAST DIRECTORY ENTRY CHARACTERS
MBRNAME  DS    CL8                MEMBER NAME RECORD
         SPACE
*  PDS DATA SET - PDS
PDS      DCB   DEVD=DA,DSORG=PO,MACRF=(R,W),DDNAME=PDS
*  PDS DATA SET - DIRECTORY
PDSD     DCB   DEVD=DA,DSORG=PS,MACRF=GM,DDNAME=PDSD,RECFM=FB,         +
               LRECL=256,BLKSIZE=256
*  OUTPUT WORK DATA SET
WRK      DCB   DSORG=PS,MACRF=(GM,PM),DDNAME=SYSUT1,RECFM=FB,LRECL=8,  +
               BLKSIZE=800,EODAD=EOFWRK
         SPACE 2
*  DIRECTORY (PDS FILE) ENTRY FORMAT
DIRE     DSECT
DIREL    EQU   42                 PDS DIRECTORY ENTRY LENGTH
MNAME    DS    CL8                MEMBER NAME
TTR      DS    CL3                FIRST RECORD TTR
NH       DS    XL1                NO. OF HALFWORDS OF USER DATA
USERD    DS    0CL30              MAX DIRECTORY USER DATA
         END   JJPDSD
/*
//*
//LKED     EXEC PGM=IEWL,
//         PARM='NCAL,LET,LIST,XREF'
//SYSLMOD  DD DISP=SHR,DSN=...YOUR.LOADLIB....
//SYSUT1   DD UNIT=VIO,SPACE=(TRK,(10,10))
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&&SYSLIN,DISP=(OLD,DELETE)
//         DD DDNAME=SYSIN
//SYSIN    DD *
 NAME JJPDSD(R)
/*
