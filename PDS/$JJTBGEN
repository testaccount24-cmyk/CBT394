
CREATE A TABLE IN THE LOAD MODULE FORMAT ROUTINE
------------------------------------------------

Specifications:

Module name: JJTBGEN

Attributes : NONE

Private macros : SUBENT - entry into an internal subroutine
                 SUBRET - exit from an internal subroutine

Function = see below

   This routine creates a table which can be processed by HALVE
binary search subroutine. Resulting table, after assembly an link
edit, has a load module format.

 INPUT to the routine:

   . SYSIN    - control data set (control stmts defining the table)
   . TBLIN    - sequential file from which table will be created. One
                record is converted into one table element. Table
                elements are put in the same sequence as records in
                TBLIN.

 OUTPUT:

   . SYSUT1   - Output file. Contains 80 bytes records with an
                assembler CSECT and constants containing description
                of the table and table elements. It has to be then
                assembled and linkedited.
   . SYSPRINT - message data set

Compiled and link-edited table can be loaded into storage using
LOAD macro or any high level language equivalent and then accessed
using HALVE table binary search subroutine. The LOAD macro issued for
a table returns address of TABLE DEFINITION control block (it is
in front of the CSECT). Table itself follows the TDEF.


SYSIN control statements:

 SYNTAX: can be specified in columns 1 to 72. No continuation is
 allowed. Control stmt consists of a keyword separated by one or
 more blanks from an operand. The following control stmts can be
 specified:

 .NAME - optional, specifies a name of the table CSECT. It is
   recommended that CSECT name is the same as load module name. If they
   are different - CSECT name has to be the entry point of the load
   module.

 .EXTRACT - optional, specifies data to be extracted from one input
   record to create one table element. Operand consists of pairs of
   numbers being respectively POSITION and LENGTH of the data to be
   extracted. More then one EXTRACT stmt can be specified. Table
   element is assembled from data specified in all EXTRACT stmts
   in the same sequence as specified in SYSIN. If no EXTRACT is
   specified - one TBLIN record is converted into one table element.
   If TBLIN contains V or U format records - EXTRACT has to be
   specified because table elements have to be of equal length.

 .KEYLEN - length of the key of the table element. It can be
   specified if key is located in the front of the table element and
   table is sorted in character ascending sequence. If specified,
   JJTBGEN checks if input file is correctly sorted. KEYLEN is
   mutually exclusive with COMPARE stmt. Either KEYLEN or
   COMPARE has to be specified. Length of the key has to be:
   1 <= KEYLEN <= 256.

 .COMPARE - entry point name of a COMPARE exit routine to be used by
   the HALVE subroutine. If table's key does not satisfy conditions as
   stated in KEYLEN discussion above - user has to provide his own
   exit to be used by HALVE. Exit routine has to be written in
   ASSEMBLER and linkedited with the table as one load module. Such
   exit makes possible creation of tables with variable length
   elements which can be processed using binary search technique.
   Binary search locates mid element of a table (or current table
   section) and compares its key with input key provided in the CALL
   of HALVE. If they are equal - search is terminated. If input key
   is lower  than mid element's key, proceeds to search first part
   of the table as delimited by the mid element. Otherwise search
   continues within second part of the table. HIGHER, EQUAL,
   LOWER terms reflect relative order of keys in the table. Their
   relative location within the table. Interface to the COMPARE exit
   is the following (on input):
     R13 - save area address
     R14 - return address
     R15 - entry point address
     R5  - input key address (key presented to HALVE)
     R11 - table mid element address
   On output R15 must have one of the return codes:
     0  if keys are equal
     4  if input key is HIGHER than mid element's key
     8  if input key is LOWER  than mid element's key
   Contents of any other register than R15 can not be modified by the
   exit.

Format of SYSIN control statements:

   NAME name         - name of the table CSECT
   KEYLEN value      - length of the key
   COMPARE name      - entry point name of COMPARE exit
   EXTRACT (p1,l1),(p2,p2),(p3,l3),.....
                     - pn, ln  are position of data in the TBLIN
                       record and length of data respectively.
                       If there is no enough of room on the SYSIN
                       record to specify all data to be included in
                       a table element - another EXTRACT stmt should
                       be specified in the next SYSIN record.

Control stmts can be specified in any sequence in the SYSIN (however
EXTRACT sequence determines the contents of a table element).

Sample JCL to run the program :

//TBGEN   EXEC PGM=JJTBGEN
//STEPLIB   DD DSN=SYS1.UTIL.LINKLIB,DISP=SHR
//TBLIN     DD DSN=OGL.TABLE(TBLXYZ),DISP=SHR
//TBOUT     DD UNIT=VIO,DSN=&&TABLE,SPACE=(4080,(10,10)),
//             DISP=(,PASS),DCB=BLKSIZE=4080
//SYSPRINT  DD SYSOUT=*
//SYSIN     DD *
NAME TBLXYZ
EXTRACT (1,50),(61,20)
EXTRACT (51,10)
KEYLEN 12
/*
//        EXEC ASMFCL
//ASM.SYSIN DD DSN=&&TABLE,DISP=(OLD,DELETE)
//LKED.SYSLMOD DD DSN=SYS2.TBLINK(TBLXYZ),DISP=SHR

End of the sample JCL


Written by: Janek JAKUBEK, OGL
               March     1986

Change activity:
       NONE

