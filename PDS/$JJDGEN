
Test Data Generation Routine
----------------------------

Specifications  :

Module name     : JJDGEN

Attributes      : NONE

Load library    : SYS1.UTIL.LINKLIB

Status          : TEST  ( this utility is still under development )

Private macros  : SUBENT - entry into internal subroutine
                  SUBRET - exit from an internal subroutine

Function = see below

    This routine generates test data for program testing purposes.
 Output file can have F,V,U record formats. RECFM, LRECL and BLKSIZE
 have to be specified in JCL for output file.  Input is on 80 bytes
 records and data are specified in assembler constants like format.
 Record data can be specified in columns 1 to 71. Col 72 is reserved for
 record continuation mark. If col 72 is different from blank it means
 that record definition is continued on next input card. If length of
 specified data is less than LRECL ( in case of F type records ) ,
 missing part is padded with blanks or pad character specified in PARM.
 If alignment takes place within a record (for type H,F,E,D,L consts),
 non used bytes are padded also with pad character.  Input record which
 does not have continuation mark is considered as the last source of
 data for one output record. Next input record after it is considered as
 begining of next output record specification.

 The following type of constants can be specified while defining
 a data record:
              C - character
              X - hexadecimal
              P - packed decimal
              Z - zoned decimal ( signed )
              H - binary halfword ( signed )
              F - binary fullword ( signed )
              A - binary, unsigned
              L - extended floating point
              D - long floating point
              E - short floating point

 Constant specification consists of four subfields:

 Duplication Factor, Type, Modifiers, Nominal Value(s).

 Detailed description of the constant subfields can be found in
 Assembler Language manual.

 Nominal Value(s) are enclosed in quotes (C,X,P,Z,H,F,E,D,L type consts)
 or in parenthesis (A type constants).

    Duplication Factor and Modifiers like in assembler constants are
 optional. The only allowed Modifier from Assembler Language is LENGTH.
 Unlike in Assembler LENGTH is not permitted in H,F,E,D,L type consts.
 Lenght modifier for type A constants has to be in 1 to 4 range , for
 type Z from 1 to 15, for type P from 1 to 8.
 Multiple Nominal Values are permitted only in X,P,Z,H,F,A,E,D,L type of
 constants ( Multiple Nominal Values are separated by a comma ). SCALE
 and EXPONENT Modifiers are not permited. Numeric values have to be
 coded as decimal self defining terms. No expressions are allowed.
 Numeric constants can have up to 15 digits specified ( significant
 digits in case of E,D,L constants). Bit-length specification is not
 allowed.  Rules of padding and truncation of constants and of implicit
 length are the same as in Assembler Language.
    In addition to LENGTH Modifier, OFFSET Modifier ( "O" ) - not known
 in Assembler, can be specified. If present - it indicates offset in
 generated record at which this constant should start.  This can make
 easier creation of records which contain only data used by the tested
 program. Sample constant specification with OFFSET Modifier is:
 XL13O55'0123456789ABCDEF'   - length of this data is 13 bytes and they
 will be put at offset 55 in output record.  Overlaying of earlier
 specified data through OFFSET specification is permitted but it does
 not change Available Byte Count (ABC) in output record unless offset
 of last byte of this constant is greater than ABC. ABC is an offset of
 next byte in output record past last specified constant. It points to
 first byte in not yet defined part of the record.  If offset is
 greater than ABC - undefined part of the record will be filled with
 pad character and ABC will be changed to point to the next byte after
 specified constant.
    Constants on input record are separated by one or more blanks.
 Specification of a constant can be continued on the next input record
 starting in column 1.
    Specification of constants can be intermixed with comments for
 documentation purposes. Comment specification begins with "/*" and ends
 with "*/"   e.g.  /* THIS IS COMMENT */  .  Input record can contain
 comment(s) only.
    In case of V and U type of output records length of every generated
 record is equal to last value of "ABC".

 INPUT to the routine:

      . SYSIN  - Input data

 OUTPUT:

      . SYSUT1   - Output file. DCB (RECFM,LRECL,BLKSIZE) has to
                   be specified in JCL.
      . SYSPRINT - messages and printout of input data

 PARM format:

      PAD=C|X"nn",ALIGN  ,LINECNT=nn
                  NOALIGN

 "PAD" specifies padding character either in character or hexadecimal
 format. Padding takes place if length of specified data is less than
 LRECL for F type records or if Offset Modifiers are used causing parts
 of the record to be left undefined.  Default is blank ( X'40' ).

 "ALIGN" and "NOALIGN" are mutually exclusive parms and specify if H,F,E
 D,L type constants are to be aligned on the proper boundaries. JJDGEN
 assumes that generated record begins on a doubleword boundary. Default
 is "NOALIGN".  If alignment takes place - unused bytes are padded with
 "PAD" character.

 "LINECNT" specifies page line count for SYSPRINT. Default is 64.
 Specification of a large value will eliminate paging at all.

Sample JCL to run the program :

//TDGEN     EXEC PGM=JJDGEN,PARM='PAD=X"00",NOALIGN'
//STEPLIB     DD DSN=SYS1.UTIL.LINKLIB,DISP=SHR
//SYSUT1      DD UNIT=DISK,SPACE=(TRK,(1,1)),DSN=&&TEST.DATA.FILE,
//               DCB=(RECFM=FB,LRECL=100,BLKSIZE=4000),DISP=(,PASS)
//SYSPRINT    DD SYSOUT=*
//SYSIN       DD *
CL8'KEY1' PL4'-286.45' 5X'18' 10C'XXX' H'28' F'123456'     AL1(5)
CL8'KEY2' PL4'+286.45' 5X'19' 10C'YYY' H'15' F'234567'     AL1(6)
CL8'KEY3' PL4'135.24'    5X'1A' 10C'ZZZ' H'10' F'-345678'  AL2(6)
CL8'KEY4' PL4'200.00'    5X'1B' 10C'AAA' H'9'  F'+4567890' AL3(6)
CL8'KEY5' PL4'1000'      5X'28' 10C'BBB' H'50' F'1'        A(6)
CL8'KEY6' PL4'-2000'     5X'38' 10C'CCC' H'99' F'2'        AL1(255)
CL8'KEY7' PL4'-1000'     D'1.12345E-10' E'583E5' L'0.1' ZL5'-1'
8X'FF' /* END-OF-FILE RECORD */                            AL1O55(111)


Written by: Janek JAKUBEK, OGL
                 July-August 1983

Change activity:
       Nov-Dec 1984: Type E, D and L constants added.
       Dec.    1984: Type Z constant added.

