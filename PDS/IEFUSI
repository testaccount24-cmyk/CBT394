//name..   JOB ............
//*
//PROCS JCLLIB ORDER=(&hlq..ASM.SASMSAM1)
//*
//ASMUJI  EXEC ASMACL,
//             PARM.C='RENT,OBJECT,NODECK',
//             PARM.L='RENT,REUS,XREF,LIST,NCAL'
//C.SYSLIB DD  DISP=SHR,DSN=&hlq..MACLIB
//         DD  DISP=SHR,DSN=&hlq..MODGEN
//C.SYSIN  DD  *
&CSECTN  SETC  'IEFUSI02'
         TITLE 'IEFUSI02 - SMF Step Initialization Installation Exit'
&CSECTN  CSECT
&CSECTN  AMODE 31
&CSECTN  RMODE ANY
***********************************************************************
* Change log:                                                         *
* Oct. 31/2003 JJ:
* The IEFUSI exit has been redesigned.
* The main reason for the update is an error in the current coding:
* If REGION=0K or 0M is specified - the region limit below the line
* was set to 5MiB and region size set to 5MiB-64KiB.
* This resulted in some SMPE job failures (due to insufficient region
* below). Also, if REGION>16M is requested, region below was set to
* private size below (LDASIZA). This occassionally causes "End of
* Memory" abends due to insufficient LSQA/SWA.
*
* Here is the current processing of the exit:
*
* For the region below 16M:
* Max region limit allowed is = LDASIZA-CUSHIONB
* If region requested + 64K < MINBELOW set region limit to MINBELOW
* If region requested + 64K > MAXBELOW set region limit to MAXBELOW
* Region below = region limit below - cushion for variable getmain
*                protection (= MVS default = 64K)
*
* For the region above 16M:
* Max region limit allowed is = LDAESIZA-CUSHIONA
* Region size  = region requested
* Region limit = region requested + cushion for variable getmain
*                protection (1M at this time, MVS default is 0K)
*
* Other changes:
* 1. Set VSMFLAGW bit 1 to ON. This means that if region requested
*    + 64K is > MAXBELOW and <= 16M - the job will not abend.
*    This in effect frees a user from knowing what the MAXBELOW in
*    his/her environment/image is. If a user codes REGION > MAXBELOW
*    and <= 16M - he/she will always get MAXBELOW, and not an abend.
* 2. Apply the exit changes to all subsystems except OMVS (it was
*    JES2 only).
* 3. Use LDA rather than GDA to get below 16MB private area size      *
*    (LDASIZA and LDAESIZA, on advise from IBM-MAIN).                 *
* 4. Use subsystem name pointed by EXTASSN (8th word of exit PARM list*
*    ) instead of the one in OUCBSUBN field (use data provided for    *
*    the exit instead of chasing the control blocks).                 *
* 5. Replaced GET/FREEMAIN macros by STORAGE.                         *
*                                                                     *
***********************************************************************
**                                                                   **
** IEFUSI: SMF Step Initialization Installation Exit         CGI MDC **
**                                                                   **
***********************************************************************
***********************************************************************
**                                                                   **
** Function:                                                         **
**                                                                   **
**    IEFUSI receives control from the initiator before each job     **
**    step is started (prior to allocation).                         **
**                                                                   **
**    This exit is used to control the installation limits for       **
**    region, GETMAIN, and data spaces.                              **
**                                                                   **
**    Following installation values are defined/set in this exit     **
**    and should be tailored to installation's need:                 **
**                                                                   **
**    . CUSHIONB: cushion below 16M for LSQA/SWA/RTM/auth.subpools.  **
**    . CUSHIONA: cushion above 16M for LSQA/SWA/RTM/auth.subpools.  **
**    . MINBELOW: Minimum region limit below 16M   (=5M+64K)         **
**    . MINABOVE: unchanged (MVS default used).                      **
**    . MAXBELOW  = LDASIZA-CUSHIONB (cushion below for LSQA/RTM)  JJ**
**    . MAXABOVE  = LDAESIZA-CUSHIONA (cushion above for LSQA/RTM) JJ**
**                                                                   **
** Operation:                                                        **
**                                                                   **
** 1.Control region size below 16M.                                  **
**                                                                   **
**  Max region limit allowed is = LDASIZA-CUSHIONB
**  If region requested + 64K < MINBELOW set region limit to MINBELOW
**  If region requested + 64K > MAXBELOW set region limit to MAXBELOW
**  Region below = region limit below - cushion for variable getmain
**                 protection (= MVS default = 64K)
**
**                                                                   **
** 2.Control region size above 16M.                                  **
**                                                                   **
**  Max region limit allowed is = LDAESIZA-CUSHIONA
**  Region size  = region requested
**  Region limit = region requested + cushion for variable getmain
**                 protection (1M at this time, MVS default is 0K)
**                                                                   **
**  Sets VSMFLAGW bit 1 to ON. This means that if region requested   **
**  + 64K is > MAXBELOW and <= 16M - the job will not abend.         **
**  This in effect frees a user from knowing what the MAXBELOW in    **
**  his/her environment/image is. If a user codes REGION > MAXBELOW  **
**  and <= 16M - he/she will always get MAXBELOW.                    **
**                                                                   **
**                                                                   **
** Recovery-operation:                                               **
**                                                                   **
**    An ESTAE is set up by the calling module IEFSMFIE.             **
**                                                                   **
** Register-Conventions:                                             **
**    Register      13 - Save area provided by caller. (No own save  **
**                       area is required by this sample exit).      **
**    Register      12 - Module base.                                **
**    Register      11 - Job Management Record JMR.                  **
**    Register       8 - Exit parameter list.                        **
**    Register       7 - VSM parameter area (VSMPARM).               **
**    Register       6 - RSM parameter area (RSMPARM).               **
**                                                                   **
** Attributes:                                                       **
**    State:         Supervisor                                      **
**    Key:           0                                               **
**    Mode:          Task                                            **
**    Amode:         31                                              **
**    Rmode:         Any                                             **
**    Type:          Reentrant                                       **
**    Serialization: Enabled / Unlocked                              **
**    ASC Mode:      Primary (HASID=PASID=SASID)                     **
**                                                                   **
** Entry-Registers:                                                  **
**    Register       0 - Irrelevant                                  **
**    Register       1 - Address of the parameter list (EXTPARM)     **
**    Registers   2-12 - Irrelevant                                  **
**    Register      13 - Address of standard 72 byte                 **
**                       save area                                   **
**    Register      14 - Return address                              **
**    Register      15 - Entry address of IEFUSI                     **
**                                                                   **
** Input:                                                            **
**    Register one points to the following list of addresses:        **
**    1. Address of the common exit parameter area mapped by IEFJMR. **
**    2. Address of an eight-byte area containing the job step name. **
**    3. Address of an eight-byte area containing the program name   **
**       from the EXEC statement.                                    **
**    4. Address of an area containing the accounting information of **
**       the EXEC statement. The first byte of the accounting infor- **
**       mation contains the number of following accounting fields.  **
**       Each entry for an accounting field contains the length of   **
**       the field (one-byte, binary) followed by the field. A zero  **
**       in the length byte indicates an omitted field.              **
**    5. Address of the VSM parameter area that IEFUSI can use to    **
**       communicate the region and GETMAIN limits below and above   **
**       the 16 mega-byte line to VSM.                               **
**    6. Address of the SRM information fullword. The first bit in   **
**       the first byte of this fullword indicates a V=R job.        **
**    7. Address of the RSM parameter area containing default and    **
**       limiting values for data spaces.                            **
**                                                                   **
** Output:                                                           **
**                                                                   **
**    . A return code indicating if job processing should continue   **
**      or should be cancelled.                                      **
**                                                                   **
**    . Updated VSM parameter area.                                  **
**                                                                   **
**    . Updated RSM parameter area.                                  **
**                                                                   **
** Exit-Registers:                                                   **
**    Registers   0-14 - Restored to contents at entry               **
**    Register      15 - Return code                                 **
**                                                                   **
** Return-Codes:                                                     **
**    0 - Job processing should continue.                            **
**    4 - Job processing should be cancelled.                        **
**                                                                   **
**                                                                   **
** Control-Blocks:                                                   **
**                                                                   **
**    Common Name/Use  Macro ID  Full Name                           **
**    ---------------  --------  ---------                           **
**    ASCB       R     IHAASCB   Address Space Control Block.        **
**    CVT        R     CVT       Communication Vector Table.         **
**    LDA        R     IHALDA    VSM Local Data Area.                **
**    JMR        R     IEFJMR    Job's Job Management Record.        **
**    PSA        R     IHAPSA    Prefixed Save Area.                 **
**                                                                   **
**    (C=Create, R=Read, W=Write, D=Delete)                          **
**                                                                   **
** Macros-Executable:                                                **
**    SAVE                                                           **
**                                                                   **
***********************************************************************
***********************************************************************
         SAVE  (14,12),,&CSECTN*&SYSDATE*&SYSTIME
         LR    R12,R15
         LR    R8,R1               Load address of parameter list.
         USING &CSECTN,R12
         L     R0,=A(GETMAINL)
         STORAGE OBTAIN,LENGTH=(0),LOC=ANY
         ST    R1,8(,R13)              CHAIN SAVE AREAS
         ST    R13,4(,R1)
         LR    R13,R1
         USING SAVEAREA,R13            ESTABLISH ADDRESSABILITY
         USING EXTPARM,R8          Set parameter list addressability.
         L     R11,EXTAEPA         Load address of exit parameter area.
         USING JMR,R11             Map SMF exit parameter area to JMR.
***********************************************************************
* Handle region / GETMAIN limits.                                     *
***********************************************************************
         ICM   R7,15,EXTAVSMP      Fetch pointer to VSM parameter list.
         USING VSMPARM,R7          VSM parameter list addressability.
         BZ    RETURN              Bypass if not provided.
         ICM   R1,15,EXTASRMI      Fetch pointer to SRM info. word.
         BZ    RETURN              Bypass if not provided.
         TM    0(R1),X'80'         V=R job ?
         BO    RETURN              Bypass if V=R job.
         L     R5,EXTASSN          Address of the subsytem name
         CLC   OMVS,0(R5)          Is it OMVS?
         BE    RETURN              Yes, quick return
*
SETRL    OI    VSMFLAGW,X'C0'      Set flags "use IEFUSI limits", +
*                          do not check to see if the requested region
*                          fits into the available space below 16
*                          megabytes.
*
* At entry to the exit the initial LDA settings are:
*
* LDALIMIT = LDAVVRG = LDASIZA - 64K
* LDAELIM  = LDAEVVRG = 32Mb
* (as per MVS Installation Exits, IEFUSI, not verified by JJ)
*
* We will look at/ set region size below 16M
*
* For the region below 16M:
*
* Max region limit allowed is = LDASIZA-CUSHIONB
* If region requested + 64K < MINBELOW set region limit to MINBELOW
* If region requested + 64K > MAXBELOW set region limit to MAXBELOW
* Region below = region limit below - cushion for variable getmain
*                protection (= MVS default = 64K)
*
         L     R1,PSAAOLD-PSA      LOAD ASCB POINTER
         L     R1,ASCBLDA-ASCB(,R1)   LOAD LDA ADDRESS
         USING LDA,R1              LDA addressability
         L     REGBELOW,LDASIZA    < 16M V=V REGION HIGH  VALUE
         S     REGBELOW,CUSHIONB   - cushion below (for LSQA/RTM etc)
*                                  = MAXBELOW (max region limit below)
         ICM   REGRQ,15,VSMREGRQ   Fetch requested region size.
         BNZ   REGRQNZ             REGION ¬= 0K/0M requested---------->
* REGION=0K/0M requested. Limit region below 16M to MAXBELOW
SETREGB  ST    REGBELOW,VSMRLIMB   Set REGION limit below 16Mb.
         S     REGBELOW,VGMCUSHB   - variable getmain cushion below
         ST    REGBELOW,VSMRSIZB   Set REGION size  below 16Mb.
         B     ABOVE               Set limits above------------------->
REGRQNZ  A     REGRQ,VGMCUSHB      Region requested + variable getmain
*                                  protection increment
         CR    REGRQ,REGBELOW      Region requested > MAXBELOW ?
         BH    SETREGB             Yes, limit region < 16M to MAXBELOW
         C     REGRQ,MINBELOW      Region < installation minimum ?
         BNL   ABOVE               No, got to above 16M region setup
         L     REGBELOW,MINBELOW   Set REGION Limit below 16Mb to
*                                   MINBELOW
         B     SETREGB             set region below to MINBELOW------->
*
* For the region above 16M:
* Max region limit allowed is = LDAESIZA-CUSHIONA
* Region size  = region requested
* Region limit = region requested + cushion for variable getmain
*                protection (1M at this time, MVS default is 0K)
*
ABOVE    DS    0H
         ICM   REGRQ,15,VSMREGRQ   Re-load requested region size.
         BNZ   ABOVENZ             REGION ¬= 0K/0M requested---------->
         L     REGRQ,LDAESIZA      Load into REGRQ private above size
ABOVENZ  C     REGRQ,MINABOVE      Region requested < 32M ............?
         BNL   ABOVENZ1            No, keep the value requested------->
         L     REGRQ,MINABOVE      Set Region requested to MINABOVE
*                                  (= MVS default = 32M)
ABOVENZ1 A     REGRQ,VGMCUSHA      region requested + cushion for
*                                  variable getmain protection
         L     REGABOVE,LDAESIZA   Private area above
         S     REGABOVE,CUSHIONA   - cushion above (for LSQA/RTM etc)
*                                  = MAXABOVE
         CR    REGRQ,REGABOVE      compare with requested
         BNL   SETREGA             REGRQ >= MAXABOVE .................?
*                                  yes, make REGABOVE=MAXABOVE ------->
         LR    REGABOVE,REGRQ      REGRQ <  MAXABOVE
*                                  make REGABOVE=REGRQ
SETREGA  ST    REGABOVE,VSMRLIMA   Set REGION limit above 16Mb.
         S     REGABOVE,VGMCUSHA   - variable getmain cushion above
         ST    REGABOVE,VSMRSIZA   Set REGION size  above 16Mb.
* We are done, fall through to RETURN
         DROP  R1
***********************************************************************
*                                                                     *
* Return to calling PROGRAM.                                          *
*                                                                     *
***********************************************************************
RETURN   EQU   *
         LR    R1,R13                  POINT AT GETMAINED AREA
         L     R13,4(,R13)             POINT AT OLD SAVE AREA
         L     R0,=A(GETMAINL)
         STORAGE RELEASE,ADDR=(1),LENGTH=(0)
         LM    R14,R12,12(R13)     Restore registers at entry.
         SR    R15,R15             Set zero return code.
         BSM   0,14                Return to caller in its mode.
         LTORG
CUSHIONA DC    A(16*1024*1024)    16M cushion above 16M for LSQA/SWA
CUSHIONB DC    A(512*1024)        512K cushion below 16M for LSQA/SWA
* 512K cushion below was selected after reviewing IBM-MAIN archive
* discussions on IEFUSI.
VGMCB    EQU   64*1024             64K variable getmain cushion below
VGMCUSHB DC    A(VGMCB)            64K variable getmain cushion below
* VGMCUSHB is used to protect the region below from a variable
* getmain that would allocate all region below and than cause
* subsequently some other abend. 64K is the MVS default.
VGMCUSHA DC    A(1024*1024)         1M variable getmain cushion above
*                                 ( 0K is the current MVS default )
MINBRS   EQU   5*1024*1024        MINBELOW region size
MINBELOW DC    A(MINBRS+VGMCB)    MINBELOW region limit
MINABOVE DC    A(32*1024*1024)    MINABOVE = 32M (MVS default)
OMVS     DC    CL4'OMVS'          OMVS Subsystem name
         SPACE
GETMAIND DSECT
SAVEAREA DS    18F
*
*  PUT OTHER DATA AREAS HERE (NOT CONSTANTS)
*
GETMAINL EQU   *-GETMAIND
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
REGRQ    EQU   R0     LDAREGRQ = VSMREGRQ (region requested)
REGABOVE EQU   R4     LDAESIZA - CUSHIONA (cushion above for LSQA/SWA)
REGBELOW EQU   R3     Work register for setting up REGION below
***********************************************************************
* Definition of IEFUSI installation exit parameter list.              *
***********************************************************************
EXTPARM  DSECT        Word#        Pointed to by register one.
EXTAEPA  DS    A        1          Address of SMF exit parameter area.
EXTASTPN DS    A        2          Pointer to step name.
EXTAPGM  DS    A        3          Pointer to program name.
EXTASACI DS    A        4          Pointer to step accounting info.
EXTAVSMP DS    A        5          Pointer to VSM parm. list (VSMPARM).
EXTASRMI DS    A        6          Pointer to SRM info. fullword.
EXTARSMP DS    A        7          Pointer to RSM parm. list (RSMPARM).
EXTASSN  DS    A        8          Addr - Subsystem name
EXTAMLIM DS    A        9          Addr - MVS MEMLIMIT values
* (Word 9 above is provided only in Archlevel=2 and z/OS 1.2 or above)
* (Word 9 pointed area is mapped by SYS1.MODGEN(IARRAX)              )
***********************************************************************
* Definition of Virtual Storage Management Parameter List (VSMPARM).  *
***********************************************************************
VSMPARM  DSECT        Word#        Pointed to by EXTAVSMP.
VSMFLAGW DS    F        1          VSM flag word
VSMREGRQ DS    F        2          Region size requested.
VSMRLIMB DS    F        3          REGION  limit below 16Mb.
VSMRSIZB DS    F        4          Region  size  below 16Mb.
VSMRLIMA DS    F        5          REGION  limit above 16Mb.
VSMRSIZA DS    F        6          Region  size  above 16Mb.
***********************************************************************
* Definition of Real Storage Management Parameter List (RSMPARM).     *
***********************************************************************
RSMPARM  DSECT                     Pointed to by EXTARSMP.
RSMDFSIZ DS    F                   Default data space size in 4Kb.
*                                  System default: 239 blocks (956Kb).
RSMMXSIZ DS    F                   Maximum combined size for all
*                                  user key data spaces owned
*                                  within an Address Space.
*                                  System default: 256Mb.
RSMMXNUM DS    F                   Maximum number of user key
*                                  data spaces that may exist at any
*                                  given time for an Address Space.
*                                  System default: 256
***********************************************************************
* DSECT for Communication Vector Table (CVT).                         *
***********************************************************************
         CVT   DSECT=YES,PREFIX=YES,LIST=YES
***********************************************************************
* DSECT for Address Space Control Block (ASCB).                       *
***********************************************************************
         IHAASCB
***********************************************************************
* DSECT for Prefixed Save Area (PSA).                                 *
***********************************************************************
         IHAPSA
***********************************************************************
* DSECT for VSM Local Data Area (LDA).                                *
***********************************************************************
         IHALDA
***********************************************************************
* DSECT for job's SMF Job Management Record (JMR).                    *
***********************************************************************
         IEFJMR
         END   &CSECTN
/*
//L.SYSLMOD DD DISP=SHR,DSN=&hlq..MVS.EXITLOAD
//L.SYSIN  DD  *
      MODE AMODE(31),RMODE(ANY)
      ENTRY IEFUSI02
      NAME  IEFUSI02(R)
/*
//*
