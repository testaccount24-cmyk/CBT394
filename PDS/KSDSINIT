         TITLE 'KSDS FILE INITIALIZATION ROUTINE'
* KSDS FILE INITIALIZATION ROUTINE'
*
* SPECIFICATIONS:
*
* MODULE NAME: KSDSINIT
*
* ATTRIBUTES : STANDARD
*
* FUNCTION = SEE BELOW
*
*     THIS ROUTINE INITIALYZES A NEWLY DEFINED VSAM KSDS FILE THROUGH
*  THE FOLLOWING SEQUENCE OF OPERATIONS:
*  .OPEN FOR OUTPUT SEQ PROCESSING
*  .LOAD A DUMMY RECORD
*  .CLOSE THE FILE
*  .RE-OPEN THE FILE FOR DIRECT PROCESSING
*  .DELETE DUMMY RECORD
*  .CLOSE THE FILE
*  AFTER THE RUN OF THIS PROGRAM VSAM KSDS FILE CAN BE OPENED FOR
*  INPUT/OUTPUT PROCESSING BY AN APPLICATION PROGRAM.
*  IF INPUT KSDS FILE WAS PREVIOUSLY LOADED WITH A DUMMY RECORD
*  (ALL BLANKS RECORD) - SUCH A RECORD WILL ALSO BE DELETED.
*
*
*
*
* RETURN CODES FROM THE PROGRAM:
*     0 - NORMAL SUCCESSFUL COMPLETION
*    16 - ERROR. CHECK MESSAGES IN SYSPRINT AND/OR SYSTEM LOG.
*
*
*    THE FOLLOWING JCL PROCEDURE HAS BEEN CATALOGED AND MAY BE INVOKED
*    TO RUN THIS PROGRAM:
*
*        //KSDSINIT PROC CAT='SYS2.ICFUCAT'
*        //KSDSINIT EXEC PGM=KSDSINIT
*        //STEPLIB    DD DSN=SYS1.UTIL.LINKLIB,DISP=SHR
*        //STEPCAT    DD DSN=&CAT,DISP=SHR
*        //KSDS       DD DSN=&KSDS,DISP=OLD
*        //SYSPRINT   DD SYSOUT=*           MESSAGE FILE
*
*    "KSDS" FILE HAS TO BE PREVIOUSLY DEFINED IN "CAT" CATALOG USING
*    IDCAMS.
*
* WRITTEN BY:
*            JAN (JANEK) JAKUBEK
*
* CHANGE ACTIVITY:
*        MARCH 27/89, JJ, ADDED A CHECK IF INPUT KSDS FILE IS EMPTY.
*              FOR NON-EMPTY FILE AN ERROR MESSAGE WILL BE ISSUED
*              AND PROGRAM WILL TERMINATE (A ONE RECORD IS ALLOWED
*              IN ORDER TO BE ABLE TO CREATE AN EMPTY ALTERNATE
*              INDEX).
*
         PRINT NOGEN
KSDSINIT CSECT                    CSECT NAME
         USING KSDSINIT,R15
         SAVE  (14,12)            SAVE REGISTERS
         CNOP  0,4                ALIGNEMENT ON A FULLWORD BOUNDARY
         BAL   R2,SAE             SAVE AREA ADDRESS
SA       DS    18F                SAVE AREA
         USING SA,R2
SAE      ST    R13,SA+4           CHAIN
         ST    R2,8(R13)          SAVE AREAS
         LR    R13,R2             CURRENT SAVE AREA
         DROP  R2
         USING SA,R13             PROGRAM BASE REGISTER
         SPACE
* REGISTERS EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
TCHR     EQU   R2                 HEX TRANSLATED CHARACTER REGISTER
HEXLEN   EQU   R3                 CONVHEX INPUT FIELD LENGTH
MSGADDR  EQU   R5                 ERROR MESSAGE ADDRESS
RECBAR   EQU   R6                 DUMMY RECORD AREA ADDRESS
LNKREG1  EQU   R9                 LINK REGISTER
HEXOUTAR EQU   R14                CONVHEX OUTPUT FIELD ADDRESS
HEXINAR  EQU   R15                CONVHEX INPUT FIELD ADDRESS
         SPACE
* OFFSETS OF VARIOUS FIELDS IN THE VSAM CONTROL BLOCKS
AMBLQ    EQU   23                 QUALIFIER           (IN AMBL)
AMBLKSDS EQU   X'04'              CLUSTER OPEND AS KSDS FLAG (AMBLQ)
AMBLDTA  EQU   52                 POINTER TO DATA AMB (IN AMBL)
AMBDSB   EQU   20                 ADDRESS OF THE AMDSB (IN AMB)
AMDNLR   EQU   60                 NUMBER OF LOGICAL RECORDS (IN AMDSB)
         SPACE
         OPEN  (VSAMF)
         LTR   R15,R15            OPEN OK.............................?
         BNZ   OPENERR            NO, OPEN ERROR---------------------->
*  CHECK IF IT IS A KSDS FILE
         L     R2,ACBAMBL         AMB LIST ADDRESS
         TM    AMBLQ(R2),AMBLKSDS IS IT A KSDS CLUSTER................?
         BZ    NOTKSDS            NO, IT IS NOT A KSDS FILE----------->
*  CHECK IF KSDS IS ALREADY LOADED
         L     R2,AMBLDTA(,R2)    DATA COMPONENT AMB ADDRESS
         L     R2,AMBDSB(,R2)     DATA COMPONENT AMDSB ADDRESS
         L     R15,AMDNLR(R2)     NUMBER OF LOGICAL DATA RECORDS
         CH    R15,=H'1'          MORE THAN ONE RECORD IN THE DATA SET?
         BH    NOEMPTY            YES, A NON-EMPTY DATA SET----------->
         SHOWCB ACB=VSAMF,AREA=DISPLAY,LENGTH=12,                      +
               FIELDS=(LRECL,RKP,KEYLEN)
         LTR   R15,R15            SHOWCB OK...........................?
         BNZ   SHOWCBER           NO, SHOWCB ERROR-------------------->
         L     R0,LRECL           RECORD LENGTH
         GETMAIN R,LV=(0)         GET STORAGE FOR DUMMY RECORD
         LR    RECBAR,R1          RECORD ADDRESS
*  INIT DUMMY RECORD WITH BLANKS
         LR    R0,R1              RECORD ADDRESS
         L     R1,LRECL           RECORD LENGTH
         SLR   R2,R2              ANY ADDRESS
         IC    R3,=X'40'          PAD CHARACTER (BLANK)
         SLL   R3,24              SHIFT IT TO BIT POSITIONS 0-7
         MVCL  R0,R2              INITIALYZE RECORD WITH PAD CHARACTER
         L     R2,LRECL           RECORD LENGTH
         MODCB RPL=VSAMRPL,       MOVE RECLEN AND AREA ADDRESS INTO RPL+
               RECLEN=(R2),       RECORD LENGTH                        +
               AREA=(RECBAR)      RECORD ADDRESS
         LTR   R15,R15            MODIFICATION OK.....................?
         BNZ   MODCBER            NO, FAILED-------------------------->
         PUT   RPL=VSAMRPL        LOAD ONE DUMMY RECORD
         LTR   R15,R15            LOAD OK.............................?
         BNZ   ERROR              NO, PUT DUMMY RECORD FAILED--------->
CLOSE1   CLOSE (VSAMF)            CLOSE THE FILE
         LTR   R15,R15            CLOSE OK............................?
         BNZ   OPENERR            NO, CLOSE ERROR--------------------->
         SPACE
         MODCB ACB=VSAMF,         MODIFY ACB TO INDICATE DIRECT KEYED  +
               MACRF=(DIR)        PROCESSING
         LTR   R15,R15            MODIFICATION OK.....................?
         BNZ   MODCBER            NO, FAILED-------------------------->
         OPEN  (VSAMF)            RE-OPEN IT
         LTR   R15,R15            OPEN OK.............................?
         BNZ   OPENERR            NO, OPEN ERROR---------------------->
         L     R2,LRECL           MAX RECORD LENGTH
         LR    R3,RECBAR          RECORD ADDRESS
         A     R3,RKP             + RKP = KEY ADDRESS
         MODCB RPL=VSAMRPL,       MODIFY RPL TO INDICATE DIRECT KEYED  +
               AREALEN=(R2),      LENGTH OF INPUT  AREA         UPDATE +
               ARG=(R3),          ADDRESS OF KEY                       +
               OPTCD=(DIR,UPD)
         LTR   R15,R15            MODIFICATION OK.....................?
         BNZ   MODCBER            NO, FAILED-------------------------->
         GET   RPL=VSAMRPL        GET DUMMY RECORD FOR UPDATE
         LTR   R15,R15            GET FOR UPDATE OK...................?
         BNZ   ERROR              NO, ERROR--------------------------->
         ERASE RPL=VSAMRPL        DELETE DUMMY RECORD
         LTR   R15,R15            DELETE OF DUMMY RECORD OK...........?
         BNZ   ERROR              NO, ERROR--------------------------->
         CLOSE (VSAMF)            CLOSE THE FILE
         LTR   R15,R15            CLOSE OK............................?
         BNZ   OPENERR            NO, CLOSE ERROR--------------------->
         SPACE
RC0      SR    R15,R15            RC = 0 ( NORMAL COMPLETION )
         SPACE
RETURN   LR    R2,R15             SAVE RETURN CODE
         L     R0,LRECL           LENGTH AND ADDRESS OF STORAGE
         LR    R1,RECBAR          TO BE FREED ( RECORD AREA )
         FREEMAIN R,LV=(0),A=(1)  FREE STORAGE FOR DUMMY RECORD
         LR    R15,R2             RESTORE RETURN CODE
         L     R13,SA+4           PREVIOUS SAVE AREA ADDRESS
         RETURN (14,12),RC=(15)   RETURN
         SPACE
RC16     DS    0H                 RC = 16 ( ERROR )
         CLOSE (MSGFILE)          CLOSE ERROR MESSAGE FILE
         LA    R15,16             RC = 16 ( ERROR )
         B     RETURN
         SPACE
*---------------------------------------------------------------------*
* OPEN/CLOSE ERROR ROUTINE                                            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
OPENERR  DS    0H                 OPEN/CLOSE ERROR ROUTINE
         ST    R15,ACBERROR       SAVE RC FROM R15
         LA    HEXINAR,ACBERROR   INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,OCR15     OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'ACBERROR  LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT RC (R15) TO HEXADECIMAL
         SHOWCB ACB=VSAMF,AREA=ACBERROR,LENGTH=4,                      +
               FIELDS=(ERROR)     GET ERROR FIELD FROM ACB
         LTR   R15,R15            SHOWCB OK...........................?
         BNZ   SHOWCBER           NO, SHOWCB ERROR-------------------->
         LA    HEXINAR,ACBERROR   INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,ACBERF    OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'ACBERROR  LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX   CONVERT ACB ERROR FIELD TO HEXADECIMAL
         LA    MSGADDR,OPECLOEM   OPEN/CLOSE ERROR MESSAGE ADDRESS
         BAL   LNKREG1,PRNTMSG    PRINT ERROR MESSAGE
         B     RC16               RETURN WITH RC=16
         SPACE
*---------------------------------------------------------------------*
* PUT/GET/ERASE (VSAM REQUEST) ERROR ROUTINE                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
ERROR    DS    0H                 VSAM REQUEST ERROR (GET OR PUT)
         ST    R15,ACBERROR       SAVE RC FROM R15
         SHOWCB RPL=VSAMRPL,AREA=FTNCD,LENGTH=8,                       +
               FIELDS=(FTNCD,FDBK)  GET FTNCD AND FDBK FIELD FROM RPL
         LTR   R15,R15            SHOWCB OK...........................?
         BNZ   SHOWCBER           NO, SHOWCB ERROR-------------------->
         CLI   RPLREQ,RPLGET      GET REQUEST.........................?
         BE    ERRORGET           YES, GET REQUEST ERROR-------------->
         CLI   RPLREQ,RPLPUT      PUT REQUEST.........................?
         BE    ERRORPUT           YES, PUT REQUEST ERROR-------------->
         CLI   RPLREQ,RPLERASE    ERASE REQUEST.......................?
         BE    ERRORERS           YES, ERASE REQUEST ERROR------------>
         MVC   REQTYPE,=CL5'*****' NO, UNEXPECTED REQUEST TYPE
         B     ERROR1             CONTINUE EDITING OF THE MESSAGE----->
ERRORGET MVC   REQTYPE,=CL5'GET'  GET REQUEST
         B     ERROR1             CONTINUE EDITING OF THE MESSAGE----->
ERRORPUT MVC   REQTYPE,=CL5'PUT'  PUT REQUEST
         B     ERROR1             CONTINUE EDITING OF THE MESSAGE----->
ERRORERS MVC   REQTYPE,=CL5'ERASE' PUT REQUEST
ERROR1   LA    HEXINAR,ACBERROR   INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,REQR15    OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'ACBERROR  LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT RC (R15) TO HEXADECIMAL
         SPACE
         LA    HEXINAR,FTNCD      INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,REQFTNCD  OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'FTNCD     LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT FTNCD TO HEXADECIMAL
         SPACE
         LA    HEXINAR,FDBK       INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,REQFDBK   OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'FDBK      LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT FDBK  TO HEXADECIMAL
         LA    MSGADDR,REQERRM    VSAM REQUEST ERROR MESSAGE ADDRESS
         BAL   LNKREG1,PRNTMSG    PRINT ERROR MESSAGE
*       CHECK IF DUMMY RECORD ALREADY EXISTS
         CLI   RPLREQ,RPLPUT      PUT REQUEST.........................?
         BNE   RC16               NO, TERMINATE THE PROGRAM----------->
         CLC   ACBERROR,=F'8'     R15 = 8.............................?
         BNE   RC16               NO, NOT A DUMMY RECORD IN THE FILE-->
         CLC   FDBK,=F'8'         DUPLICATE RECORD CONDITION..........?
         BNE   RC16               NO, NOT AN EXISTING DUMMY RECORD---->
         LA    MSGADDR,DUPRECM    DUMMY RECORD ALREADY IN THE FILE
         BAL   LNKREG1,PRNTMSG    PRINT MESSAGE
         B     CLOSE1             DELETE EXISTING DUMMY RECORD
         SPACE
*---------------------------------------------------------------------*
* SHOWCB ERROR ROUTINE                                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SHOWCBER DS    0H                 SHOWCB MACRO ERROR
         STM   R15,R0,ACBERROR    SAVE R15 AND R0 (ERROR CODE)
         LA    HEXINAR,ACBERROR   INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,SCBR15    OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'ACBERROR  LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT RC (R15) TO HEXADECIMAL
         SPACE
         LA    HEXINAR,ACBERROR+4 INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,SCBR0     OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'ACBERROR  LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT ERROR CODE TO HEXADECIMAL
         SPACE
         LA    MSGADDR,SCBERRM    SHOWCB ERROR MESSAGE ADDRESS
         BAL   LNKREG1,PRNTMSG    PRINT ERROR MESSAGE
         B     RC16               RETURN WITH RC=16
         SPACE
*---------------------------------------------------------------------*
* MODCB ERROR ROUTINE                                                 *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MODCBER  DS    0H                 MODCB MACRO ERROR
         STM   R15,R0,ACBERROR    SAVE R15 AND R0 (ERROR CODE)
         LA    HEXINAR,ACBERROR   INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,MCBR15    OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'ACBERROR  LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT RC (R15) TO HEXADECIMAL
         SPACE
         LA    HEXINAR,ACBERROR+4 INPUT ADDRESS FOR CONVHEX
         LA    HEXOUTAR,MCBR0     OUTPUT ADDRESS FOR CONVHEX
         LA    HEXLEN,L'ACBERROR  LENGTH OF INPUT FIELD TO BE CONVERTED
         BAL   LNKREG1,CONVHEX    CONVERT ERROR CODE TO HEXADECIMAL
         SPACE
         LA    MSGADDR,MCBERRM    SHOWCB ERROR MESSAGE ADDRESS
         BAL   LNKREG1,PRNTMSG    PRINT ERROR MESSAGE
         B     RC16               RETURN WITH RC=16
         SPACE
*---------------------------------------------------------------------*
* INPUT FILE IS NOT A KSDS                                            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
NOTKSDS  LA    MSGADDR,NKSDSEM    NON-KSDS DATA SET ON INPUT
         BAL   LNKREG1,PRNTMSG    PRINT ERROR MESSAGE
         B     RC16               RETURN WITH RC=16
         SPACE
*---------------------------------------------------------------------*
* INPUT FILE IS NOT EMPTY (ALREADY LOADED)                            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
NOEMPTY  LA    MSGADDR,NEMPTEM    NON-EMPTY DATA SET ON INPUT
         BAL   LNKREG1,PRNTMSG    PRINT ERROR MESSAGE
         B     RC16               RETURN WITH RC=16
         SPACE
*---------------------------------------------------------------------*
* MESSAGE PRINT ROUTINE                                               *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PRNTMSG  DS    0H                 PRINT ERROR MESSAGE ROUTINE
         TM    MSGFILE+48,DCBOFOPN  IS MESSAGE FILE OPENED............?
         BO    PRNTMSG1           YES, ALREADY OPENED    ------------->
         OPEN  (MSGFILE,(OUTPUT))
         TM    MSGFILE+48,DCBOFOPN    OPEN SUCCESSFUL    .............?
         BNO   MSGOPNER           NO, OPEN ERROR         ------------->
PRNTMSG1 SLR   R1,R1              CLEAR R1
         IC    R1,0(MSGADDR)      MESSAGE TEXT LENGTH
         CH    R1,=AL2(L'MSGTXT)  WILL FIT INTO MSGTXT FIELD..........?
         BNH   PRNTMSG2           YES, OK----------------------------->
         LH    R1,=AL2(L'MSGTXT)  NO, PRINT ONLY PART OF MESSAGE TEXT
PRNTMSG2 BCTR  R1,0               MESSAGE TEXT LENGTH - 1
         EX    R1,MVCMSG          MOVE MESSAGE TEXT INTO LINE
         PUT   MSGFILE,MSGREC     PRINT MESSAGE
         MVI   MSGTXT,X'40'       BLANK MESSAGE RECORD
         MVC   MSGTXT+1(L'MSGTXT-1),MSGTXT
         BR    LNKREG1
MVCMSG   MVC   MSGTXT(1),1(MSGADDR)  MOVE MESSAGE TEXT INTO MSG LINE
         SPACE
*---------------------------------------------------------------------*
*   TRANSLATION OF ERROR CODES INTO HEXADECIMAL SUBROUTINE            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* HEXINAR  - INPUT FIELD ADDRESS
* HEXOUTAR - OUTPUT FIELD ADDRESS
* HEXLEN   - INPUT FIELD LENGTH
         SPACE
CONVHEX  DS    0H
         IC    TCHR,0(0,HEXINAR)  TRANSLATED CHARACTER
         SLL   TCHR,24            EXTRACT H/O HEX DIGIT
         SRL   TCHR,28
         LA    TCHR,HEXCH(TCHR)   HEX DIGIT ADDRESS
         MVC   0(1,HEXOUTAR),0(TCHR) MOVE HEX DIGIT INTO OUTPUT STRING
         IC    TCHR,0(0,HEXINAR)  TRANSLATED CHARACTER
         SLL   TCHR,28            EXTRACT L/O HEX DIGIT
         SRL   TCHR,28
         LA    TCHR,HEXCH(TCHR)   HEX DIGIT ADDRESS
         MVC   1(1,HEXOUTAR),0(TCHR) MOVE HEX DIGIT INTO OUTPUT STRING
         LA    HEXINAR,1(0,HEXINAR) NEXT TRANSLATED CHAR ADDRESS
         LA    HEXOUTAR,2(0,HEXOUTAR) NEXT OUTPUT ADDRESS
         BCT   HEXLEN,CONVHEX     TRANSLATE NEXT CHARACTER
         BR    LNKREG1            RETURN TO CALLER
         SPACE
HEXCH    DC    C'0123456789ABCDEF' HEXADECIMAL CHARACTERS
         SPACE
*/////////////////////////////////////////////////////////////////////*
*        THE FOLLOWING FULLWORDS ARE LOCATION DEPENDENT               *
DISPLAY  DS    0F                 FIELDS OBTAINED BY SHOWCB           *
LRECL    DS    F                  MAX. LRECL                          *
RKP      DS    F                  RELATIVE KEY POSITION               *
KEYLEN   DS    F                  KEY LENGTH                          *
ACBERROR DS    F                  ACB ERROR FIELD                     *
FTNCD    DS    F                  RPL FUNCTION CODE                   *
FDBK     DS    F                  RPL FEEDBACK FIELD                  *
*/////////////////////////////////////////////////////////////////////*
         SPACE
         IFGACB DSECT=NO,AM=VSAM       ACB LAYOUT
         ORG   IFGACB
VSAMF    ACB   AM=VSAM,DDNAME=KSDS,MACRF=(OUT)
         SPACE
         IFGRPL DSECT=NO,AM=VSAM       RPL LAYOUT
         ORG   IFGRPL
VSAMRPL  RPL   ACB=VSAMF,OPTCD=(SEQ)   LOAD RPL
         SPACE
*  MESSAGE SEQL DATA SET
MSGFILE  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,             +
               LRECL=132,EXLST=MSGEXLST
         SPACE
MSGEXLST DS    0F
         DC    X'85',AL3(MSGDCBEX) EXIT FOR BLKSIZE NOT SPECIFIED
         SPACE
MSGOPNER DS    0H                 MSG DCB OPEN ERROR
         WTL   'KSDSINIT  - SYSPRINT DATA SET CANNOT BE OPENED'
         B     RC16
         SPACE
MSGDCBEX DS    0H                 EXIT IF BLKSIZE NOT SPECIFIED        +
                                  MSG DATA SET
         USING IHADCB,R1          DCB ADDRESSABILITY
         LH    R2,DCBBLKSI        LOAD BLKSIZE
         LTR   R2,R2              BLKSIZE=0 ..........................?
         BNZR  R14                NO,RETURN <----------------
         MVC   DCBBLKSI,DCBLRECL  BLKSIZE=LRECL========================
         BR    R14                RETURN    <----------------
         DROP  R1
         SPACE
OPECLOEM DC    AL1(OPECLOME-OPECLOEM-1) OPEN/CLOSE ERROR MESSAGE
         DC    C'OPEN/CLOSE ERROR  R15='
OCR15    DS    CL8                RC CODE IN R15
         DC    C' ACB ERROR FIELD='
ACBERF   DS    CL8                ACB ERROR FILED
OPECLOME EQU   *
         SPACE
REQERRM  DC    AL1(REQERRME-REQERRM-1) GET | PUT | ERASE ERROR MSG
         DC    C'VSAM '
REQTYPE  DC    CL5' '             REQUEST TYPE
         DC    C' REQUEST ERROR  R15='
REQR15   DS    CL8                RC CODE IN R15
         DC    C' FTNCD='
REQFTNCD DS    CL8                REQUEST FUNCTION CODE
         DC    C' FDBK='
REQFDBK  DS    CL8                REQUEST FEEDBACK FIELD
REQERRME EQU   *
         SPACE
SCBERRM  DC    AL1(SCBERRME-SCBERRM-1) SHOWCB MACRO ERROR
         DC    C'SHOWCB MACRO ERROR  R15='
SCBR15   DS    CL8                RC CODE IN R15
         DC    C' R0='
SCBR0    DS    CL8                REQUEST FUNCTION CODE
SCBERRME EQU   *
         SPACE
MCBERRM  DC    AL1(MCBERRME-MCBERRM-1) MODCB MACRO ERROR MSG
         DC    C'MODECB MACRO ERROR  R15='
MCBR15   DS    CL8                RC CODE IN R15
         DC    C' R0='
MCBR0    DS    CL8                REQUEST FUNCTION CODE
MCBERRME EQU   *
         SPACE
NKSDSEM  DC    AL1(NKSDSEME-NKSDSEM-1) NOT KSDS FILE ERROR MESSAGE
         DC    C'NON-KSDS DATA SET IS NOT ALLOWED AS INPUT TO THIS PROG+
               RAM'
NKSDSEME EQU   *
         SPACE
NEMPTEM  DC    AL1(NEMPTEME-NEMPTEM-1) NOT-EMPTY FILE ERROR MESSAGE
         DC    C'INPUT DATA SET IS NOT A NEWLY DEFINED, EMPTY KSDS CLUS+
               TER'
NEMPTEME EQU   *
         SPACE
DUPRECM  DC    AL1(DUPRECME-DUPRECM-1) DUMMY RECORD ALREADY IN THE FILE
         DC    C'LOAD OF DUMMY RECORD FAILED. RECORD ALREADY EXISTS IN +
               THE FILE'
DUPRECME EQU   *
         SPACE
MSGREC   DS    0CL132             MESSAGE RECORD
         DC    CL10'KSDSINIT'     PROGRAM ID
MSGTXT   DC    CL122' '           MESSAGE TEXT
         LTORG
         SPACE
         DCBD  DSORG=PS
         SPACE
         END   KSDSINIT
