//*.......  JOB  ....YOUR JOBCARD......
//*
//ASM      EXEC PGM=ASMA90,PARM='OBJECT,NODECK,LINECOUNT(64)'
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//         DD DISP=SHR,DSN=???????.CBT.F394
//SYSPUNCH DD DUMMY
//SYSUT1   DD UNIT=VIO,SPACE=(1024,(120,120))
//SYSLIN   DD UNIT=VIO,SPACE=(3040,(40,40),RLSE),
//            DCB=(RECFM=FBS,LRECL=80,BLKSIZE=0),
//            DSN=&&SYSLIN,DISP=(NEW,PASS)
//SYSIN    DD *
         TITLE 'DASD DATA SETS CATALOG ROUTINE'
* DASD DATA SETS CATALOG ROUTINE'
*
* SPECIFICATIONS:
*
* MODULE NAME: DEFNVS
*
* ATTRIBUTES : NONE
*
* PRIVATE MACROS : "SUBENT" - ENTRY INTO INTERNAL SUBROUTINE
*                  "SUBRET" - EXIT FROM AN INTERNAL SUBROUTINE
*                  "TSTAMP" - TIME STAMP ( COMPILATION DATE AND TIME )
*
* ATTENTION: SYS1.AMODGEN HAS TO BE CONCATENATED TO ASSEMBLER SYSLIB
*
* FUNCTION = SEE BELOW
*
*       THIS ROUTINE READS VTOC OF A DASD VOLUME AND CREATES IDCAMS
*    "DEFINE NONVSAM" CONTROL STATEMENTS. ITS PURPOSE IS TO CATALOG
*    AUTOMATICALLY ALL NON VSAM DATA SETS.
*
*    INPUT TO THE ROUTINE:
*
*         . DASDVOL- INPUT DASD VOLUME ( ITS VTOC )
*
*    OUTPUT:
*
*         . SYSUT1 - 80 BYTES SEQUENTIAL FILE WITH "DEFINE NVSAM" STMTS
*
*
* THE FOLLOWING JCL MAY BE USED TO EXECUTE THIS PROGRAM :
*
* //LIST    EXEC PGM=DEFNVS,PARM=&DEVT
* //DASDVOL   DD UNIT=&DEVT,VOL=SER=&VOLSER,DISP=OLD
* //SYSUT1    DD UNIT=DISK,SPACE=(TRK,(2,2)),DISP=(,PASS),DSN=&&DEFNVS,
* //             DCB=BLKSIZE=3200
* //CATLG   EXEC PGM=IDCAMS
* //STEPCAT   DD DSN=......,DISP=SHR  CATALOG NAME
* //SYSPRINT  DD SYSOUT=*
* //SYSIN     DD DSN=&&DEFNVS,DISP=(OLD,DELETE)
*
*
* WRITTEN BY: JANEK JAKUBEK, OGL
*               DECEMBER 1983
*
* CHANGE ACTIVITY:
*                 NONE
*
         SPACE
DEFNVS1  CSECT                    CSECT NAME
         DC    C'DEFNVS ',AL1(7)
         TSTAMP
         PRINT NOGEN
DEFNVS   SAVE  (14,12)            SAVE REGISTERS
         USING DEFNVS,R15
         ENTRY DEFNVS             ENTRY POINT
         SPACE
* REGISTERS EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
*   BITS EQUATES
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         SPACE
WRKR1    EQU   R2                 WORK REGISTER 1
RDEB     EQU   R3                 DEB ADDRESS
BUFLSTR  EQU   R4                 BUFFER LIST ADDRESS
         SPACE
         L     R1,0(0,R1)         PARM FIELD ADDRESS
         ST    R1,PARMA           SAVE PARM ADDRESS
         L     R0,DSAS            DSA SIZE
         GETMAIN R,LV=(0)         GET STORAGE FOR DSA
         USING DSA,R1
         ST    R13,SA+4           CHAIN
         ST    R1,8(R13)          SAVE AREAS
         LR    R13,R1             CURRENT SAVE AREA
         DROP  R1
         USING DSA,R13            DSA ADDRESSABILITY
         DROP  R15
         BALR  R12,0              SETUP PROGRAM ADDRESSABILITY
         USING *,R12
         SPACE
*  OPEN VTOC DATA SET
         SPACE
         LA    R0,JFCBA           ADDRESS OF AREA FOR JFCB
         ST    R0,JFCBEXL         INTO EXIT LIST
         MVI   JFCBEXL,X'87'      LAST AND ONLY ENTRY IN EXLST
         RDJFCB (VTOC)            READ DASDVOL DD JFCB INTO STORAGE
         MVI   JFCBA,X'04'        FORMAT-4 DSCB ( VTOC ) DSNAME
         MVC   JFCBA+1(43),JFCBA
         OPEN  (VTOC),TYPE=J
         L     RDEB,VTOC+44       LOAD DEB ADDRESS FROM OPENED DCB
         OPEN  (OUTF,(OUTPUT))    OPEN WORK FILE
         SPACE
* INITIALYZE NON-VARIABLE FIELDS IN OUTPUT RECORD + OTHERS
         MVC   VOLSER,JFCBA+118   VOLSER OF PROCESSED PACK
         L     R1,PARMA           PARM ADDRESS
         MVC   DEVT,2(R1)         INITIALYZE DEVICE TYPE ( UNIT )
         SPACE
         LA    BUFLSTR,BUFLIST    BUFFER LIST ADDRESS
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST INITIALYZE BUFFER LIST
         MVI   BFLHNOE,1          NUMBER OF ENTRIES IN BUFFER LIST
         MVI   BFLHFL,BFLHDSCB    SCBS ARE TO BE READ WITH BUFFER LIST
         MVI   BFLELTH,140        DSCB BUFFER LENGTH
         LA    R0,DSCB            DSCB BUFFER ADDRESS
         ST    R0,BFLEBUF         PUT IT INTO BUFFER LIST
         SPACE
*  READ VTOC ENTRIES ( FORMAT 1 OR 4 DSCBS ) LOOP
         SPACE
VTOCRDL  DS    0H
         SPACE
* ISSUE CVAFSEQ MACRO
         SPACE
CVAL     CVAFSEQ ACCESS=GT,                                            +
               BUFLIST=(BUFLSTR),                                      +
               DEB=(RDEB)
         LTR   R15,R15            END OF VTOC ( IF NON ZERO RC )......?
         BNZ   EOVTOC             YES, END-OF-VTOC     --------------->
         CLI   DS1FMTID,C'1'      FORMAT 1 DSCB        ...............?
         BNE   VTOCRDL            NO, READ NEXT VTOC ENTRY ( DSCB )--->
         CLC   DS1DSORG,=X'0008'  VSAM DATA SET OR DATA SPACE.........?
         BE    VTOCRDL            YES, NO CATALOGING REQUIRED--------->
         SPACE
* CREATE OUTPUT RECORD
         SPACE
         MVI   DSNAME,X'40'       INITIALYZE DSNAME TO BLANKS
         MVC   DSNAME+1,DSNAME
         MVC   DSNAME,DS1DSNAM    DATA SET NAME
         LA    WRKR1,DSNAME+1     CLOSING PARENTHESIS
CLOSP    CLI   0(WRKR1),X'40'     END OF DSNAME.......................?
         BE    CLOSP1             YES          ----------------------->
         LA    WRKR1,1(0,WRKR1)   NO, NEXT CHAR ADDRESS
         B     CLOSP              CHECK NEXT CHARACTER OF DSNAME------>
CLOSP1   MVI   0(WRKR1),C')'      MOVE CLOSING PARENTHESIS INT DEFINE
         MVI   1(WRKR1),C')'      MOVE CLOSING PARENTHESIS INT DEFINE
         SPACE
         PUT   OUTF,OUTREC        PUT RECORD INTO WORK FILE
         B     VTOCRDL            READ NEXT VTOC ENTRY
         SPACE
EOVTOC   DS    0H                 END OF VTOC
         CLOSE (OUTF,,VTOC) CLOSE ALL FILES
         SPACE
RET0     XR    R15,R15            RC=0
RET      L     R0,DSAS            DSASIZE
         LR    R1,R13             DSA ADDRESS
         L     R13,SA+4           PREVIOUS SAVE AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1)  FREEMAIN DSA
         RETURN (14,12),RC=(15)
         SPACE
PARMA    DS    F                  PARM FIELD ADDRESS
DSAS     DC    A(DSAE-DSA)        DSA SIZE
         PRINT NOGEN
         SPACE
*  INPUT FILE
         SPACE
VTOC     DCB   DSORG=PS,MACRF=R,DDNAME=DASDVOL,KEYLEN=44,EXLST=JFCBEXL
         SPACE
JFCBEXL  DS    F                  EXLST FOR JFCB READING
         SPACE
*  OUTPUT FILE
         SPACE
OUTF     DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSUT1,RECFM=FB,             +
               LRECL=80
         SPACE
OUTREC   DS    0CL80              OUTPUT RECORD LAYOUT
         DC    CL17' DEF NVSAM (DEVT('
DEVT     DC    CL4' '             DEVICE TYPE
         DC    CL6') VOL('
VOLSER   DC    CL6' '             VOLUME SERIAL NUMBER
         DC    CL7') NAME('
DSNAME   DC    CL44' '            DATA SET NAME
         DC    CL10' '
         LTORG
         SPACE
*  DYNAMIC STORAGE AREA
DSA      DSECT
SA       DS    18F                SAVE AREA
JFCBA    DS    CL176              JFCB ( FOR OPEN TYPE=J OF VTOC FILE )
         SPACE
DSCB     DS    CL140              DSCB BUFFER
         ORG   DSCB
         PRINT GEN
         IECSDSL1 (1)             FORMAT 1 DSCB MACRO
         ORG
         SPACE
BUFLIST  ICVAFBFL DSECT=NO
         PRINT NOGEN
DSAE     EQU   *                  DSA END
         SPACE
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
         END   DEFNVS
/*
//*
//LKED     EXEC PGM=IEWL,
//         PARM='NCAL,LET,LIST,XREF'
//SYSLMOD  DD DISP=SHR,DSN=...YOUR.LOADLIB....
//SYSUT1   DD UNIT=VIO,SPACE=(TRK,(10,10))
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&&SYSLIN,DISP=(OLD,DELETE)
//         DD DDNAME=SYSIN
//SYSIN    DD *
 NAME DEFNVS(R)
/*
