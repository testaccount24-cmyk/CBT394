//*.......  JOB  ....your jobcard......
//*
//*
//ASM      EXEC PGM=ASMA90,PARM='OBJECT,NODECK,LINECOUNT(64)'
//SYSPRINT DD SYSOUT=*
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//SYSPUNCH DD DUMMY
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(1024,(120,120))
//SYSLIN   DD UNIT=SYSALLDA,SPACE=(3040,(40,40),RLSE),
//            DCB=(RECFM=FBS,LRECL=80,BLKSIZE=0),
//            DSN=&&SYSLIN,DISP=(NEW,PASS)
//SYSIN    DD *
         TITLE 'VERIFY IF SPECIFIED ADDRESS SPACE(S) IS/ARE UP'
* SPECIFICATIONS:
*
* MODULE NAME: OFDASVER
*
* ATTRIBUTES : NONE
*
* FUNCTION = SEE BELOW
*
*     THIS ROUTINE CHECKS IF SPECIFIED ADDRESS SPACE(S) IS/ARE UP.
*  IF ALL SPECIFIED ADDRESS SPACES ARE UP, IT TERMINATES WITH
*  RETURN CODE OF ZERO, OTHERWISE IT TERMINATES WITH A RETURN CODE
*  OF 16.
*  HERE ARE THE POSSIBLE APPLICATIONS FOR THIS PROGRAM:
*  .VERFIY IF A CICS OR DBCOMM/DB REGION IS UP IN THE FIRST STEP
*   OF A JOB. IF YES, CONTINUE THE JOB, OTHERWISE TERMINATE IT.
*  .VERFIY IF ALL REQUIRED STARTED TASKS ARE UP AFTER IPL OR
*   PERIODICALLY DURING A DAY. IF NOT - ISSUE A WARNING MESSAGE TO
*   THE OPERATOR.
*
*
*  PROGRAM INPUT:
*
*   SYSIN  - SPECIFIES A LIST OF ADDRESS SPACES TO BE VERIFIED.
*            FORMAT OF THE SYSIN RECORD IS THE FOLLOWING:
*
*            1        10       19        - COLUMNS
*            JOBNAME  STEPNAME PROCSTPN
*
*            ANY NUMBER OF CARDS WITH JOB/STC/TSU ADDRESS SPACE NAME
*            CAN BE SPECIFIED IN THE SYSIN.
*            STEP NAME AND PROCEDURE STEP NAME ARE OPTIONAL.
*            IF SPECIFIED - PROGRAM WILL CHECK IF ADDRESS SPACE IS
*            RUNNING THE SPECIFIED STEP. IF NOT, PROGRAM WILL TERMINATE
*            WITH RC=16. IF STEP.NAME/PROC.STEP.NAME ARE NOT SPECIFIED,
*            PROGRAM WILL ONLY CHECK IF THE SPECIFIED JOB/STC/TSU IS
*            RUNNING.
*            PROCEDURE STEP NAME SHOULD NOT BE SPECIFIED FOR A TSO
*            USER (TSU ADDRESS SPACE).
*
*
*  PROGRAM OUTPUT:
*
*   SYSPRINT - DIAGNOSTIC MESSAGES
*
*
*  SAMPLE JCL TO RUN THE PROGRAM:
*
*   //OFDASVER EXEC PGM=OFDASVER
*   //STEPLIB    DD DISP=SHR,DSN=<YOUR.LOAD.LIB>
*   //SYSPRINT   DD SYSOUT=*      MESSAGES FILE
*   //SYSUDUMP   DD SYSOUT=D      DUMP
*   //SYSIN     DD *
*   JOBNAME  STEPNAME PROCSTPN
*   ......
*   ......
*   ......
*   /*
*
* PROGRAM LOGIC:
*
*     THIS PROGRAM HAS TO HAVE AMODE=24, RMODE=24 BECAUSE IT USES
*  NON-VSAM ACCESS METHOD. CSCB CONTROL BLOCK RESIDES HOWEVER ABOVE
*  THE LINE, SO ADDRESSING MODE SWITCHING IS REQUIRED TO ACCESS IT.
*     ADDRESS SPACE NAME/STEP NAME/PROCEDURE STEP NAME ARE FOUND IN
*  THE CSCB CONTROL BLOCK. CSCB IS LOCATED THROUGH THE FOLLOWING
*  CONTROL BLOCK CHAIN:
*     PSA -> CVT -> ASVT -> ASCB -> CSCB           (FOR STC/TSU)
*     PSA -> CVT -> ASVT -> ASCB -> CSCX -> CSCB   (FOR BATCH JOBS)
*
*
* WRITTEN BY: JANEK JAKUBEK, OGL
*             JANUARY 1993
*
* CHANGE ACTIVITY:
*                 NONE
*
*        PRINT NOGEN
OFDASVER CSECT
OFDASVER AMODE 24
OFDASVER RMODE 24
         SAVE  (14,12)            SAVE REGISTERS
         USING OFDASVER,R15
         SPACE
* REGISTERS EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         CNOP  0,4                ALIGNEMENT ON A FULLWORD BOUNDARY
         BAL   WRKR1,OFDASSAE     SET SAVE AREA ADDRESS
OFDASSA  DS    18F                SAVE AREA
OFDASSAE ST    R13,OFDASSA+4      CHAIN
         ST    WRKR1,8(R13)       SAVE AREAS
         LR    R13,WRKR1          CURRENT SAVE AREA
         DROP  R15
         USING OFDASSA,R13        PROGRAM BASE REGISTER
         SPACE
WRKR1    EQU   R2
ASCBPTR  EQU   R3
CSCBPTR  EQU   R4
CVTADDR  EQU   R5
ASVTPTR  EQU   R6
MAXUSERS EQU   R7
OUCBPTR  EQU   R8
         SPACE
*
         OPEN  (SYSIN,(INPUT),SYSPRINT,(OUTPUT))
         BAL   R14,CLEARINR       CLEAR INPUT RECORD
         MVC   INPUTR(L'MSG1),MSG1 HEADER MESSAGE
         PUT   SYSPRINT,INPUTR    PRINT IT
         BAL   R14,CLEARINR       CLEAR INPUT RECORD
         PUT   SYSPRINT,INPUTR    PRINT IT
         SPACE
GETNEXT  GET   SYSIN,INPUTR       GET THE INPUT RECORD
* FOR EACH INPUT RECORD (ADDRESS SPACE NAME) WE WILL SCAN THE ASVT->
* ASCB TO FIND OUT IF IT IS RUNNING
         L     R1,AMODE31         SET ADDRESS WITH H/O BIT ON
         BSM   R0,R1              SET AMODE 31
AMODE31  DC    A(AMODE32+X'80000000')
AMODE32  L     CVTADDR,CVTPTR     LOAD CVT ADDRESS
         USING CVT,CVTADDR        ADDRESSABILITY ON CVT
         L     ASVTPTR,CVTASVT    LOAD ASVT ADDRESS
         USING ASVT,ASVTPTR       ADDRESSABILITY ON ASVT
         LH    MAXUSERS,ASVTMAXU+2 MAXIMUM NUMBER OF ADDRESS SPACES
         LA    WRKR1,ASVTENTY     FIRST ASCB ENTRY ADDRESS
         SPACE
* ASVT PROCESSING LOOP
ASVTPRL  TM    0(WRKR1),ASVTAVAL  IS THIS ENTRY AVAILABLE.............?
         BO    NEXTASCB           YES, BYPASS THIS ENTRY-------------->
         L     ASCBPTR,0(WRKR1)   LOAD ASCB ADDRESS
         LA    ASCBPTR,0(ASCBPTR) CLEAR H/O BIT
         LTR   ASCBPTR,ASCBPTR    ASCB POINTER IS ZERO................?
         BZ    NEXTASCB           YES, CHECK NEXT ASCB---------------->
         USING ASCB,ASCBPTR       ADDRESSABILITY ON ASCB
* OUCB CHECK WAS TAKEN FROM SDSF ISFDA MODULE. IT IS PROBABLY TO ENSURE
* THAT ADDRESS SPACE IS IN FACT RUNNING (AS OPPOSED TO BEING TERMINATED
* OR CREATED)
         L     OUCBPTR,ASCBOUCB   OUCB ADDRESS
         LA    OUCBPTR,0(OUCBPTR) CLEAR H/O BIT
         LTR   OUCBPTR,OUCBPTR    ANY OUCB............................?
         BZ    NEXTASCB           NO,  CHECK NEXT ASCB---------------->
         USING OUCB,OUCBPTR       ADDRESSABILITY ON OUCB
         TM    OUCBSFL,OUCBINV    IS OUCB VALID.......................?
         BO    NEXTASCB           NO,  CHECK NEXT ASCB---------------->
* IN CASE OF A BATCH JOB - ASCBJBNI FILED POINTS TO A JOBNAME FIELD
* IN THE CSCX CONTROL BLOCK
         L     CSCBPTR,ASCBJBNI   JOBNAME  ADDRESS
         LA    CSCBPTR,0(CSCBPTR) CLEAR H/O BIT
         LTR   CSCBPTR,CSCBPTR    ANY JOBNAME.........................?
         BZ    NOTBJOB            NO,  EITHER STC OR TSU-------------->
         USING CHNAME,CSCBPTR     ADDRESSABILITY ON CSCX
         L     CSCBPTR,CHCSCBP    LOAD CSCB ADDRESS
         DROP  CSCBPTR            DROP ADDRESSABILITY ON CSCX
         USING CSCB,CSCBPTR       ADDRESSABILITY ON CSCB
         MVC   USRJNAME,CHKEY     JOB NAME FOR BATCH JOB
         MVC   USRSNAME,CHSTEP    STEP NAME FOR BATCH JOB
         MVC   USRPSTEP,CHPROCSN  PROC.STEP NAME FOR BATCH JOB
         B     VERJBN             VERFIY IF THIS IS SPECIFIED JOB----->
NOTBJOB  L     CSCBPTR,ASCBCSCB   CSCB ADDRESS
NOTBJOB1 LA    CSCBPTR,0(CSCBPTR) CLEAR H/O BIT
         LTR   CSCBPTR,CSCBPTR    ANY CSCB............................?
         BZ    NEXTASCB           NO,  CHECK NEXT ASCB---------------->
* NO JOBNAME POINTER PRESENT, MUST BE TSU, STC, OR INIT
         TM    OUCBYFL,OUCBSTT+OUCBMNT IS IS A START OR MOUNT.........?
         BZ    TSU1               NO,  MUST BE A TSU------------------>
         MVC   USRJNAME,CHCLS     JOBNAME = PROC NAME FOR STC
         MVC   USRSNAME,CHKEY     STEPNAME = TASK ID FOR STC
         MVC   USRPSTEP,CHPROCSN  PROC.STEP NAME FOR STC
         B     VERJBN             CHECK IF THIS IS SPECIFIED A/S------>
TSU1     MVC   USRJNAME,CHKEY     JOBNAME = USERID FOT TSU
         MVC   USRSNAME,CHCLS     STEPNAME = LOGON PROC NAME FOR STC
         MVC   USRPSTEP,=CL8' '   NO PROC.STEP NAME FOR TSU
* LET'S CHECK IF THIS IS ADDRESS SPACE SPECIFIED IN THE SYSIN
VERJBN   CLC   ASNAME,USRJNAME    IS THIS THE REQUESTED A/S...........?
         BNE   NEXTASCB           NO,  CHECK NEXT ASCB---------------->
         CLI   STEPNAME,C' '      IS STEP NAME SPECIFIED AS WELL......?
         BE    VERPRCSN           NO, VERIFY PROCEDURE STEPNAME------->
         CLC   STEPNAME,USRSNAME  IS THIS THE REQUESTED STEP..........?
         BNE   NEXTASCB           NO,  CHECK NEXT ASCB---------------->
VERPRCSN CLI   PROCSNME,C' '      IS PROC.STP.NAME SPECIFIED AS WELL..?
         BE    ASFOUND            NO, REQUESTED A/S IS RUNNING-------->
         CLC   PROCSNME,USRPSTEP  IS THIS THE REQUESTED PROC.STEP.....?
         BNE   NEXTASCB           NO,  CHECK NEXT ASCB---------------->
* REQUESTED ADDRESS SPACE IS RUNNING
ASFOUND  MVC   MSGTEXT(L'MSGT0),MSGT0 MESSAGE TEXT
         BAL   R14,PUTMSG         PRINT MESSAGE
         BAL   R14,CLEARINR       CLEAR THE INPUT RECORD
         B     GETNEXTM           GET THE NEXT INPUT A/S NAME--------->
         SPACE
* VERIFY NEXT ADDRESS SPACE FORM ASVT
NEXTASCB LA    WRKR1,4(,WRKR1)    ADDRESS OF NEXT ASCB ENTRY IN ASVT
         BCT   MAXUSERS,ASVTPRL
* WE CHECKED ALL ASCBS AND NO MACHING A/S FOUND
* REQUESTED ADDRESS SPACE IS NOT RUNNING IN THE SYSTEM
         MVC   MSGTEXT(L'MSGT16),MSGT16 MESSAGE TEXT
         BAL   R14,PUTMSG         PRINT MESSAGE
         BAL   R14,CLEARINR       CLEAR THE INPUT RECORD
         MVC   RC,=A(16)          RC=16
         SPACE
GETNEXTM LA    R1,GETNM24         LOAD ADDRESS WITH H/O BIT OFF
         BSM   R0,R1              SET MODE 24
GETNM24  B     GETNEXT            GET NEXT SYSIN RECORD--------------->
         SPACE
EOF      LA    R1,CLOSE24         LOAD ADDRESS WITH H/O BIT OFF
         BSM   R0,R1              SET MODE 24
CLOSE24  CLOSE (SYSIN,,SYSPRINT)  CLOSE FILES
         L     R15,RC             SET RETURN CODE
         L     R13,OFDASSA+4      PREVIOUS SAVE AREA ADDRESS
         RETURN (14,12),RC=(15)
         SPACE
* WRITE OUT A MESSAGE RECORD
* ADDRESSING MODE SWITCHING IS REQUIRED FOR NON-VSAM MACROS
PUTMSG   SUBENT
         LA    R1,PUTMSG24        LOAD ADDRESS WITH H/O BIT OFF
         BSM   R0,R1              SET MODE 24
PUTMSG24 PUT   SYSPRINT,INPUTR    WRITE OUT A MESSAGE
         L     R1,PUTMSG31        SET ADDRESS WITH H/O BIT ON
         BSM   R0,R1              SET AMODE 31
PUTMSG31 DC    A(PUTMSG32+X'80000000')
PUTMSG32 SUBRET PUTMSG            RETURN
         SPACE
         PRINT NOGEN
SYSIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,                         +
               RECFM=FB,LRECL=80,EODAD=EOF
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      +
               RECFM=FB,LRECL=120
         SPACE
MSG1     DC    C'OFDASVER - PROGRAM VERIFIES IF SPECIFIED ADDRESS SPACE+
               S ARE RUNNING'
         SPACE
CLEARINR MVI   INPUTR,C' '        CLEAR THE RECORD
         MVC   INPUTR+1(L'INPUTR-1),INPUTR
         BR    R14
         SPACE
INPUTR   DS    0CL120
ASNAME   DS    CL8                ADDRESS SPACE NAME
         DS    CL1
STEPNAME DS    CL8                STEP NAME
         DS    CL1
PROCSNME DS    CL8                PROCEDURE STEP NAME
         DS    CL1
MSGTEXT  DS    CL91               MESSAGE TEXT
         SPACE
USRJNAME DS    CL8                ADDRESS SPACE NAME
USRSNAME DS    CL8                STEP NAME
USRPSTEP DS    CL8                PROCEDURE STEP NAME
         SPACE
MSGT0    DC    C' - RC=0, ADDRESS SPACE IS RUNNING IN THE SYSTEM'
MSGT16   DC    C' - RC=16, ADDRESS IS NOT IN THE SYSTEM'
RC       DC    A(0)               RETURN CODE FROM THE PROGRAM
         SPACE
         LTORG
         SPACE
* CONTROL BLOCK MAPPING
CSCB     DSECT
         IEECHAIN
         CVT     DSECT=YES
         IHAASCB DSECT=YES
         IHAASVT
         IRAOUCB
         END   OFDASVER
/*
//*
//LKED     EXEC PGM=IEWL,
//         PARM='NCAL,LET,LIST,XREF'
//SYSLMOD  DD DISP=SHR,DSN=...your.loadlib....
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(TRK,(10,10))
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&&SYSLIN,DISP=(OLD,DELETE)
//         DD DDNAME=SYSIN
//SYSIN    DD *
 MODE AMODE(24),RMODE(24)
 ENTRY OFDASVER
 NAME  OFDASVER(R)
/*
